<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.6.2">Jekyll</generator><link href="https://rmakara.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://rmakara.github.io/" rel="alternate" type="text/html" /><updated>2017-11-19T20:57:12+01:00</updated><id>https://rmakara.github.io/</id><title type="html">Rafał Makara - Blog</title><subtitle>Blog o krawędzi między programowaniem i zarządzaniem projektami</subtitle><author><name>Rafał Makara</name></author><entry><title type="html">OnEstimates. Część III: Zagrożenia płynące z estymacji</title><link href="https://rmakara.github.io/notes/OnEstimates-Czesc-III-Zagrozenia-plynace-z-estymacji" rel="alternate" type="text/html" title="OnEstimates. Część III&amp;#58; Zagrożenia płynące z estymacji" /><published>2017-11-19T00:00:00+01:00</published><updated>2017-11-19T00:00:00+01:00</updated><id>https://rmakara.github.io/notes/OnEstimates-Czesc-III-Zagrozenia-plynace-z-estymacji</id><content type="html" xml:base="https://rmakara.github.io/notes/OnEstimates-Czesc-III-Zagrozenia-plynace-z-estymacji">&lt;h1 id=&quot;każdy-kij-ma-dwa-końce&quot;&gt;Każdy kij ma dwa końce&lt;/h1&gt;

&lt;p&gt;Powiedzieliśmy już, że z estymacji płynie bardzo wiele korzyści i główną z nich jest edukacja. Z drugiej jednak strony, wdrażanie nowego elementu niesie za sobą konsekwencje tworzenia nowych ryzyk w innych obszarach systemu złożonego, a taki tworzony jest przez wszystko co ma związek z wytwarzaniem oprogramowania.&lt;/p&gt;

&lt;p&gt;Patrząc na potencjalne problemy z różnych perspektyw (dev, QA, PM, SM, PO) można dostrzec zupełnie coś innego. Korzystając z tego, że miałem okazję pracować zarówno jako developer, jak i project manager postaram przytoczyć się elementy, które zazwyczaj były dla mnie niezrozumiałe gdy siedziałem tylko po jednej ze stron.&lt;/p&gt;

&lt;h1 id=&quot;plany-biznesowe-i-akcje-marketingowe&quot;&gt;Plany biznesowe i akcje marketingowe&lt;/h1&gt;

&lt;p&gt;Tworzenie softu jest częścią biznesu. Osoby biznesowe czegoś zazwyczaj traktują proces tworzenia oprogramowania jako element czegoś większego. To sprawia, że estymacje mogą prowadzić do określenia orientacyjnych (lub precyzyjnych) terminów wdrożenia nowych funkcjonalności z którymi mogą wiązać się plany biznesowe firmy. Wyobraźmy sobie np. wdrożenie nowej funkcjonalności obsługi e-faktur i proces zachęcania użytkowników do przejścia z wykorzystywania faktur papierowych na wersje elektroniczne. W celu przeprowadzenia takiego działania milion klientów otrzymujących faktury papierowe ma dostać wraz z kolejną fakturą ulotkę informującą o korzyściach płynących z przejścia na wersje elektroniczną. Takie działanie musi być poprawnie osadzone w czasie i nastąpić po wdrożeniu obsługi e-faktur do oprogramowania. W jaki sposób zsynchronizować jedno z drugim? Estymować, mierzyć i weryfikować. Jeżeli nasze estymacje będą niepoprawne, a wszelkie działania marketingowe oraz proces wytwarzania danego modułu trwa np. 3-4 miesiące to w sytuacji, gdy ulotki zostaną rozesłane do miliona klientów, a system nie będzie gotowy - mamy problem. Informacja o tego typu problemach w większości firm nawet nie trafia do programistów. Warto ich informować, aby generować poczucie odpowiedzialności i zobowiązania.&lt;/p&gt;

&lt;h1 id=&quot;harmonogram&quot;&gt;Harmonogram&lt;/h1&gt;

&lt;p&gt;Współpracując z innymi musimy być przewidywalni, ponieważ muszą oni dostosować wykonywaną przez siebie pracę do nas, a my naszą do nich. Jeżeli niepoprawnie wyestymujemy czasy zamykania kolejnych etapów wytwarzania systemu, czyli innymi słowy stworzymy nierealny harmonogram doprowadzamy do sytuacji w której zaburzamy nie tylko cykl swojej pracy, ale również wszystkie harmonogramy zależne. Książkowym przykładem jest wytwarzanie aplikacji z dużą ilością integracji, które dopiero będą przygotowywane w innym systemie przez firmę trzecią. Każde przesunięcie terminu w wytwarzaniu powoduje nie tylko zmianę harmonogramu prac firmy trzeciej, ale również naszej… a być możę również działów w naszej firmie, których praca ponownie jest zależna od obiecanych przez nas elementów.&lt;/p&gt;

&lt;h1 id=&quot;planowanie-budżetu&quot;&gt;Planowanie budżetu&lt;/h1&gt;

&lt;p&gt;Ze względu na złożoność wytwarzanych aplikacji bardzo ciężko jest wyszacować koszt stworzenia dużego systemu już na początku jego realizacji. Między innymi przez to popularna jest forma rozliczania &lt;a href=&quot;https://en.wikipedia.org/wiki/Time_and_materials&quot;&gt;time&amp;amp;materials&lt;/a&gt;, która opiera się na pobieraniu opłat w oparciu o stawki godzinowe. Zmiana formy rozliczania na taką nie oznacza, że nasz klient nagle przeobraża się w studnię bez dna i możemy od niego pobierać pieniądze w nieskończoność. Budżet jest ograniczony, zawsze. Estymowanie, mierzenie i weryfikowanie pozwala na kontrolę aktualnego stanu budżetu oraz planowanie jego wykorzystnaia w przyszłości. Co można zrobić źle? Estymować i mierzyć, ale nie weryfikować. Jeżeli taki scenariusz połączymy z wytwarzaniem dużego systemu w modelu “wdróżmy wszystko naraz, a nie iteracyjnie” to kończymy bez budżetu, ale z systemem wytworzonym w 80%, który nie jest gotowy do wykorzystania przez klientów.&lt;/p&gt;

&lt;h1 id=&quot;motywacja-zespołu&quot;&gt;Motywacja zespołu&lt;/h1&gt;

&lt;p&gt;W poprzedniej części serii o estymacjach przytaczaliśmy następujące prawo:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Praca rozszerza się tak, aby wypełnić czas dostępny na jej ukończenie.&lt;/p&gt;

  &lt;p&gt;– &lt;cite&gt;Prawo Parkinsona, Cyril Northcote Parkinson&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Brak definiowania deadlineów wpływa negatywnie na wydajność, kreatywność i poczucie odpowiedzialności zespołów. Wiąże się to między innymi z teorią mówiącą, że w ramach wspierania pracy zespołów samoorganizujących się powinniśmy umożliwić im samoorganizację, ale jednoczęśnie nadając pewne ograniczenia w obrębie których taki zespół samodzielnie powinien stworzyć rozwiązania. Jednym z takich ograniczeń jest właśnie termin - należy pamiętać, aby był wywarzony - motywujący i osiągalny - ponieważ może wpłynąć na zespół zarówno pozytywnie, jak i negatywnie.&lt;/p&gt;

&lt;p&gt;Szacowanie jest motywujące również przez publiczne (i grupowe) mówienie o tym. Stałe podawanie niepoprawnych estymacji pozbawione wyciągania wniosków na przyszłość jest pewną plamą na honorze, którą widzą koledzy i koleżanki z zespołu.&lt;/p&gt;

&lt;h1 id=&quot;wysoka-niedokładność&quot;&gt;Wysoka niedokładność&lt;/h1&gt;

&lt;p&gt;Nabywając każdą nową umiejętność na początku jesteśmy skazani na niepowodzenia. Estymowanie w początkowych fazach pracy z systemem którego nie znamy generuje stres wśród członków zepsołu i łatwo jest doprowadzić do sytuacji w której ludzie nie chce kontynuować szacowania, ponieważ w pierwszych sprintach wiele estymacji jest przekroczonych. Rolą osób spokojniejszych (lub &lt;a href=&quot;https://en.wikipedia.org/wiki/Scrum_(software_development)#Scrum_master&quot;&gt;Scrum Mastera&lt;/a&gt;) jest wyjaśnienie po co to robimy i dlaczego warto, oraz doprowadzenie do sytuacji w której każdy członek zespołu rozumie powody stojące za estymowaniem, zamiast traktować spotkania groomingowe jako najbardziej stresujący moment tygodnia.&lt;/p&gt;

&lt;h1 id=&quot;mowa-nienawiści&quot;&gt;Mowa nienawiści&lt;/h1&gt;

&lt;p&gt;Podobnie jak w przypadku komunikacji przy code review. Można stworzyć atmosferę w której przeglądanie kodu innych osób czy analizowanie estymacji i ich słuszności stanie się okazją do wyładowania emocjonalnego i powiedzenia innym jacy są źli. Ponownie, rolą Scrum Mastera lub współpracującego ze sobą zespołu jest doprowadzenia do sytuacji w której nikt nie traktuje tego procesu jako potencjalnego powodu do zaczepki, a jako element wspierający w stawaniu się lepszą grupą zmierzającą w tym samym kierunku.&lt;/p&gt;

&lt;h1 id=&quot;błędy-i-zmiany&quot;&gt;Błędy i zmiany&lt;/h1&gt;

&lt;p&gt;Szacując objętność dowolnego zadania bardzo często skupiamy się na obsłudze &lt;a href=&quot;https://en.wikipedia.org/wiki/Happy_path&quot;&gt;szczęśliwej ścieżki&lt;/a&gt; jego wykonania. Zapominamy o ewentualnych błędach, które może generować stworzone rozwiązanie oraz konieczności wdrożenia modyfikacji na które wpadamy podczas jego realizacji. W takich sytuacjach z pomoca przychodzi nam rozmowa z zespołem podczas &lt;a href=&quot;https://en.wikipedia.org/wiki/Scrum_(software_development)#Daily_scrum&quot;&gt;daily&lt;/a&gt;, wykorzystwanie funkcjonalności Remaining Estimate w systemach ticketowych, &lt;a href=&quot;https://martinfowler.com/bliki/TestDrivenDevelopment.html&quot;&gt;test driven development&lt;/a&gt; oraz &lt;a href=&quot;https://dannorth.net/introducing-bdd/&quot;&gt;behaviour driven development&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Specjaliści najczęściej są optymistami. Warto zestawiać własne myślenie z głębokim drążeniem tematu w zakresie tego czego mogliśmy nie przemyśleć, co mogliśmy przeoczyć, co może pójść nie tak, czy da się to zrobić prościej.&lt;/p&gt;

&lt;h1 id=&quot;samodzielne-estymacje&quot;&gt;Samodzielne estymacje&lt;/h1&gt;

&lt;p&gt;Zupełnie jak w stadzie wilków - nikt nie jest Alfą i Omegą. Bardzo trudne jest osiągnięcie wysokiego prawdopodobieństwa szacunków w systemie złożonym, gdy wykonuje to jedna osoba. Taki element procesu można uznać za antywzorzec i należy omówić z zespołem jego modyfikację na korzyść estymacji grupowych i wspólnego analizowania problemu. Każdy z nas ma inne doświadczenie i każdy popełnił inne błędy w życiu. Dzięki temu nieocenione jest wykorzystywanie punktu widzenia innych osób mogących powiedzieć &lt;em&gt;“been there, done that… zróbmy to inaczej…“&lt;/em&gt;. Życie przyzwyczaja nas do uczenia się na błędach własnych, a nie na błędach innych osób - nie jest to jednak najefektywniejsza ścieżka.&lt;/p&gt;

&lt;h1 id=&quot;estymowanie-cudzej-pracy&quot;&gt;Estymowanie cudzej pracy&lt;/h1&gt;

&lt;p&gt;To chyba jeden z popularniejszych antywzorców na które się napotykałem. Lider zespołu lub manager estymujący czas realizacji zadania bez udziału specjalistów, którzy będą dane zadanie realizować. Doprowadza to do stresowania zespołu, ale przede wszystkim do pozbawiania nas szansy na omówienie rozwiązywanego problemu w kilka osób. Gdy to tylko możliwe - estymujmy w grupach, koniecznie przy udziale tych osób, które będą brać udział w doprowadzaniu zadania do końca.&lt;/p&gt;

&lt;h1 id=&quot;agresywny-klient&quot;&gt;Agresywny klient&lt;/h1&gt;

&lt;p&gt;Współpracownicy oraz klienci są różni. Zdarzają się sytuacje w których rozmawiamy z osobami kontaktowymi po stronie klienta, które mogą być dość konkretne, ostre lub niemiłe. W takich sytuacjach osoby o słabszych charakterach mają tendencję do zaniżania swoich estymacji, celem uniknięcia kontaktu z nieprzychylną klienta. Problemy wychodzą później, gdy konieczne jest przedstawienie wyników swojej pracy. W takich momentach warto chronić osoby, które na trudną komunikację z klientem reagują wysokim stresem i warto umożliwić im skupienie się na samej efektywnej realizacji zadania.&lt;/p&gt;

&lt;h1 id=&quot;zbyt-wczesne-szacowanie-i-brak-odpowiedniej-granulacji&quot;&gt;Zbyt wczesne szacowanie i brak odpowiedniej granulacji&lt;/h1&gt;

&lt;p&gt;Warunkiem poprawnego okreslenia objętości zadania jest posiadanie wystarczającej ilości danych o nim. Estymując zadanie o olbrzymim zakresie, bez przeprowadzenia wstępnej analizy dość trudno jest precyzyjnie je oszacować. Warto zebrać podstawowe informacje, a przede wszystkim podzielić task na mniejsze, których szacowanie będzie zdecydowanie prostsze.&lt;/p&gt;

&lt;h1 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h1&gt;

&lt;p&gt;Każdy kij ma dwa końce. W przypadku estymacji zdecydowanie korzystniejszym z końców jest ten pozytywny, ale warto pamiętać również o negatywnych aspektach płynących z procesu estymowania i przygotować się na spotkanie z nimi, ponieważ z pewnością się pojawią.&lt;/p&gt;

&lt;p&gt;Powyższe przykłady stanowią jedynie niewielki wycinek problemów jakie mogą powstać podczas podejmowania wysiłku szacowania pracy. Należy jednak pamiętać, że najczęstszym rozwiązaniem jest - praca zespołowa.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Talent wins games, but teamwork and intelligence win championships.&lt;/p&gt;

  &lt;p&gt;– &lt;cite&gt;Michael Jordan&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;źródła-i-pojęcia&quot;&gt;Źródła i pojęcia&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;[1] &lt;a href=&quot;https://en.wikipedia.org/wiki/Time_and_materials&quot;&gt;Time &amp;amp; materials, Wikipedia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[2] &lt;a href=&quot;https://en.wikipedia.org/wiki/Scrum_(software_development)#Scrum_master&quot;&gt;Scrum Master, Wikipedia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[3] &lt;a href=&quot;https://en.wikipedia.org/wiki/Scrum_(software_development)#Daily_scrum&quot;&gt;Daily Scrum, Wikipedia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[4] &lt;a href=&quot;https://martinfowler.com/bliki/TestDrivenDevelopment.html&quot;&gt;Test Driven Development, Martin Fowler&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[5] &lt;a href=&quot;https://dannorth.net/introducing-bdd/&quot;&gt;Behaviour Driven Development, Dan North&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Rafał Makara</name></author><category term="onEstimates" /><category term="estymacje" /><summary type="html">Każdy kij ma dwa końce</summary></entry><entry><title type="html">Developer vs Project Manager 002: Zarobki</title><link href="https://rmakara.github.io/notes/Dev-vs-PM-Zarobki" rel="alternate" type="text/html" title="Developer vs Project Manager 002&amp;#58; Zarobki" /><published>2017-11-13T00:00:00+01:00</published><updated>2017-11-13T00:00:00+01:00</updated><id>https://rmakara.github.io/notes/Dev-vs-PM-Zarobki</id><content type="html" xml:base="https://rmakara.github.io/notes/Dev-vs-PM-Zarobki">&lt;blockquote&gt;
  &lt;p&gt;Disclaimer: W serii Developer vs Project Manager opisuję kontrasty dla granicznych położeń tych ról. Zachowuję świadomość istnienia specjalistów posiadających wiele kompetencji miękkich oraz managerów posługujących się niskopoziomową wiedzą techniczną - te grupy świadomie pomijam.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;pieniądze-w-it&quot;&gt;Pieniądze w IT&lt;/h1&gt;

&lt;p&gt;Poza ciekawą ścieżką kariery, możliwością spotkania masy niesamowitych, pozytywnych i pełnych pasji ludzi, łatwości zmiany pracy czy relokacji kariera w IT daje możliwość relatywnie prostego dojścia do satysfakcjonujących zarobków. Osoby wychodzące ze studiów w wieku 22-24 lat mają szansę zarabiać spore kwoty. Nawet osoby startujące karierę już w wieku 18-20 lat zazwyczaj zarabiają więcej od swoich rówieśników w innych branżach. Jak wyglądają ścieżki rozwoju finansowego programistów i managerów?&lt;/p&gt;

&lt;h1 id=&quot;programista15k&quot;&gt;#programista15k&lt;/h1&gt;

&lt;p&gt;W Internecie krąży dość popularny hashtag #programista15k, który z jednek strony zawiera w sobie odrobinę żartu, a z drugiej odrobinę rzeczywistości. Tworzy on pewne wyobrażenie o branży IT dla osób, które dopiero w nią wchodzącą, a też jest pewnego rodzaju celem do którego dążą developerzy pracujący już od kilku lat. Ile ma w sobie prawdy?&lt;/p&gt;

&lt;p&gt;Z mojego doświadczenia wynika, że widełki na stanowiskach programistów w Polsce wynoszą od 1 300 do 28 000 PLN netto + VAT w ramach umowy B2B. Rozstrzał jest dość spory, ale ma to pewne uzasadnienie wynikające z poziomów popytu i podaży na programistów, na polskim rynku. Proporcja w której jest dużo pracy, a mało pracowników (mimo wszystko coraz więcej) sprawia, że przypięcie 3 poziomów finansowania do etykietek junior, mid, senior to zbyt mało. Popularne od 2-3 lat szkoły programowania wprowadzające na rynek coraz więcej początkujących programistów biorą poważny udział w zasilaniu naszego rynku. Ze względu na specyfikę rynku mamy juniorów robiących &lt;a href=&quot;https://pl.wikipedia.org/wiki/CRUD&quot;&gt;CRUDy&lt;/a&gt;, seniorów robiących CRUDy, juniorów wysyłających rakiety w kosmos, seniorów wysyłających rakiety w kosmos. Tak duże zróżnicowanie wymagań stawianych przed specjalistami jest jak najbardziej korzystne dla ludzi w branży, ale może doprowadzić do bólu w którym senior po zmianie firmy spada na poziom wyrośniętego juniora, a co za tym idzie - spadają jego zarobki.&lt;/p&gt;

&lt;p&gt;Analizując oferty pracy na polskim rynku, pracując w branży od 7 lat i rozmawiając ze znajomymi zaobserwowałem, że największa liczba programistów zarabia kwoty z przedziału od 4 000 do 9 000 PLN.&lt;/p&gt;

&lt;p&gt;Kolejnym przedziałem jest 9 000 - 16 000 PLN, który zazwyczaj dotyczy “seniorshipu” i ról pokrywających się z przyjmowaniem na siebie pewnej dozy odpowiedzialności (współpraca z klientem, mentorowanie innym, prowadzenie zespołu lub bycie prawdziwym inżynierem).&lt;/p&gt;

&lt;p&gt;Natknąłem się zaledwie kilka firm oferujących stawki na poziomie 20 000 - 28 000 PLN. O dziwo nie były to tylko firmy outsourcingowe, a również firmy produktowe oferujące oprogramowanie w modelu SaaS, pozwalającym na mocne skalowanie biznesu.&lt;/p&gt;

&lt;p&gt;Na polskim rynku raczej nie ma ofert z kwotami powyżej 28 000 PLN dla programistów.&lt;/p&gt;

&lt;p&gt;Istotnym elementem wszystkich powyższych ofert jest to, że pracy jest dużo, a ludzi jednak mniej. Gdy przejdzie się przez etap mocnego juniorshipu - pracę można zmieniać jak skarpetki.&lt;/p&gt;

&lt;h1 id=&quot;managerk&quot;&gt;#manager?k&lt;/h1&gt;

&lt;p&gt;Tutaj rozstrzał jest jeszcze większy, mimo iż popyt i podaż nie są od siebie aż tak bardzo oddalone. Uniwersalne określenie Project Manager może oznaczać w różnych firmach Project Managera, Account Managera, Scrum Master, Product Ownera, Software Development Managera, Project Management Assistanta lub cechy tych ról wymieszane ze sobą. Czasami wynika to z niedojrzałości firm definiujących dane stanowiska co skutkuje popularnym w IT “zarządzaniem, bez zarządzania”.&lt;/p&gt;

&lt;p&gt;Widełki tutaj są zauważalne na poziomie od 2 000 do 45 000 PLN.&lt;/p&gt;

&lt;p&gt;Większość PMów zarabia w przedziale od 4 000 do 8 000 PLN. W firmach, w których stanowisko project managera nie oznacza przede wszystkim bycia &lt;a href=&quot;https://en.wikipedia.org/wiki/Point_of_contact&quot;&gt;single point of contact&lt;/a&gt; dla klienta, a jest rzeczywiście konkretną rolą powiązaną z zarządzaniem projektem (np. Prince2, PMP) lub efektywnym wspieraniem pracy zespołu (np. Zarządzanie 3.0, Agile) stawki mogą wzrosnąć do przedziału 8 000 - 20 000 PLN. W takich organizacjach zazwyczaj występuje jawne odseparowanie ról osób, których praca opiera się na danych, a których na ludziach. Temat ten dotyczy dość szerokiego zagadnienia jakim jest niefortunne porównywanie Prince2 ze Scrumem, ale to ponownie temat na inny post.&lt;/p&gt;

&lt;p&gt;Najlepsi managerowie są w stanie otworzyć sobie ścieżkę do zarobków 20 000 - 30 000 PLN, gdy w zakresie ich kompetencji nie leży jedynie udział w pracach projektowych, a szersze i większe przyjmowanie odpowiedzialności w kontekście firmowym.&lt;/p&gt;

&lt;p&gt;Najwyższe zarobki na jakie się natknąłem się w publicznym ogłoszeniu o pracę wynosiły około 40 000 PLN miesięcznie i dotyczyły product managementu (nie project managementu) w jednym z bardziej znanych softów na świecie.&lt;/p&gt;

&lt;p&gt;W porównaniu do stanowisk programistycznych - miejsc dla managerów jest mniej. Jeden manager przypada zazwyczaj na kilka zespołów programistycznych, więc konkurencja w momencie aplikowania na stanowisko jest większa.&lt;/p&gt;

&lt;h1 id=&quot;gdzie-jest-hajs&quot;&gt;Gdzie jest hajs?&lt;/h1&gt;

&lt;p&gt;W skrócie, chciałoby się powiedzieć - nie w software house’ach i nie w wytwarzaniu, a w biznesie.&lt;/p&gt;

&lt;p&gt;Mimo iż wytwarzanie oprogramowania wymaga od nas (często) szalenie wysokiej wiedzy specjalistycznej, w dalszym ciągu jest wytwarzaniem. To osoby odpowiedzialne za odpowiedzi na pytanie Dlaczego? zlecają nam wytworzenie czegoś i kalkulują proces wytwórczy w taki sposób, aby był on jednym z kosztów, który pozwoli im zarobić większą sumę pieniędzy. Większość oprogramowania tworzona jest aby:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;zarobić więcej,&lt;/li&gt;
  &lt;li&gt;obniżyć koszty,&lt;/li&gt;
  &lt;li&gt;obniżyć poziom ryzyka,&lt;/li&gt;
  &lt;li&gt;rozwiązać problem,&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;i jest przedewszystkim środkiem do osiągnięcia wyższego celu. Do poparcia tego argumentu warto użyć &lt;a href=&quot;https://pl.wikipedia.org/wiki/Lista_100_najbogatszych_Polak%C3%B3w_tygodnika_%E2%80%9EWprost%E2%80%9D&quot;&gt;listy najbogatszych Polaków&lt;/a&gt;, która nie jest przepełniona założycielami firm programistycznych.&lt;/p&gt;

&lt;p&gt;W ramach swojej prezentacji &lt;a href=&quot;https://www.youtube.com/watch?v=1OmmeShKxpM&amp;amp;&quot;&gt;WJUG #171: 5-10-15 lat w karierze developera&lt;/a&gt; Wojciech Seliga przytoczył cytat, który może posłużyć jako wniosek:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;It’s easy to earn a lot but earning a shitload means usually managerial path.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Jako uzupełnienie warto przesłuchać również prezentację &lt;a href=&quot;https://www.youtube.com/watch?v=Y3AsFs4GVXY&quot;&gt;GeeCON 2017: Wojciech Seliga - Developer plantations - colonialism of XXI century&lt;/a&gt; skłaniającą do przemyśleń na temat własnej dojrzałości w świecie IT, a także rozważnego zaplanowania przyszłości.&lt;/p&gt;

&lt;p&gt;Podsumowując:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Łatwiej jest zarobić więcej jako programista.&lt;/li&gt;
  &lt;li&gt;Szalenie dużo można zarobić tylko jako manager, ale jest to dużo trudniejsze.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;
&lt;h4 id=&quot;źródła-i-pojęcia&quot;&gt;Źródła i pojęcia&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;[1] &lt;a href=&quot;https://pl.wikipedia.org/wiki/CRUD&quot;&gt;CRUD&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[2] &lt;a href=&quot;https://en.wikipedia.org/wiki/Point_of_contact&quot;&gt;single point of contact&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[3] &lt;a href=&quot;https://www.youtube.com/watch?v=1OmmeShKxpM&amp;amp;&quot;&gt;WJUG #171 - 5-10-15 lat w karierze developera - Wojciech Seliga&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[4] &lt;a href=&quot;https://www.youtube.com/watch?v=Y3AsFs4GVXY&quot;&gt;GeeCON 2017: Wojciech Seliga - Developer plantations - colonialism of XXI century&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[5] &lt;a href=&quot;https://pl.wikipedia.org/wiki/Lista_100_najbogatszych_Polak%C3%B3w_tygodnika_%E2%80%9EWprost%E2%80%9D&quot;&gt;Lista najbogatszych Polaków&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Rafał Makara</name></author><category term="developer" /><category term="pm" /><category term="project" /><category term="manager" /><summary type="html">Disclaimer: W serii Developer vs Project Manager opisuję kontrasty dla granicznych położeń tych ról. Zachowuję świadomość istnienia specjalistów posiadających wiele kompetencji miękkich oraz managerów posługujących się niskopoziomową wiedzą techniczną - te grupy świadomie pomijam.</summary></entry><entry><title type="html">Komunikacja i język w zespole</title><link href="https://rmakara.github.io/notes/Komunikacja-i-jezyk-w-zespole" rel="alternate" type="text/html" title="Komunikacja i język w zespole" /><published>2017-10-22T00:00:00+02:00</published><updated>2017-10-22T00:00:00+02:00</updated><id>https://rmakara.github.io/notes/Komunikacja-i-jezyk-w-zespole</id><content type="html" xml:base="https://rmakara.github.io/notes/Komunikacja-i-jezyk-w-zespole">&lt;h1 id=&quot;programowanie-pracą-zespołową&quot;&gt;Programowanie pracą zespołową&lt;/h1&gt;

&lt;p&gt;Pracując nad dowolnym projektem komercyjnym bardzo rzadko zdarza się pracować samodzielnie. Zazwyczaj projekty są na tyle złożone, że konieczne jest budowanie zespołów, których członkowie uzupełniają się umiejętnościami i wiedzą. W takiej rzeczywistości, poza wysokimi kompetencjami technicznymi, kluczem do sukcesu jest efektywna komunikacja zarówno z kolegami i koleżankami z zespołu, jak i klientem. Świat IT nie tworzy ograniczeń geograficznych zarówno pod względem poszukiwania klientów, ponieważ codziennością jest współpraca polskich firm programistycznych z klientami z całego świata. Podobnie podczas budowania własnych zespołów, szefowie nie wymagają od ludzi przebywania w jednym biurze. Istnieją takie firmy jak &lt;a href=&quot;http://zapier.com&quot;&gt;Zapier&lt;/a&gt;, &lt;a href=&quot;https://nozbe.com&quot;&gt;Nozbe&lt;/a&gt; czy &lt;a href=&quot;https://softwaremill.com/&quot;&gt;SoftwareMill&lt;/a&gt;, które współpracują w pełni zdalnie i nie tworzy to żadnego problemu.&lt;/p&gt;

&lt;p&gt;Ze względu na takie standardy naszej branży, specjaliści zmuszeni są do poznania najważniejszego w programowaniu języka - angielskiego. W takiej sytuacji, ciekawą kwestią staje się budowanie zespołów z uwzględnieniem języków jakimi posługują się ich członkowie. W zależności od konfiguracji można zaobserwować różne zalety oraz wady.&lt;/p&gt;

&lt;p&gt;W trzech historiach będę się posługiwał zwrotem “język polski” w rozumieniu języka natywnego, a “język angielski” jako dowolnego języka obcego.&lt;/p&gt;

&lt;h1 id=&quot;zespół-polskojęzyczny&quot;&gt;Zespół polskojęzyczny&lt;/h1&gt;

&lt;p&gt;Wszyscy porozumiewamy się językiem natywnym, posiadamy komfort pozwalający na skupienie się głównie na rozwiązywanych problemach. Każdy członek mojego zespołu jest w stanie swobodnie posługiwać się wszelkimi oficjalnymi sentencjami, jak i mową potoczną, która jest bardzo charakterystyczna dla domeny, dla której tworzymy oprogramowanie. Przy takich możliwościach, techniczne i domenowe elementy projektu wymagające omówienia są łatwiejsze do przedstawienia. Obniżamy koszt komunikacji i zyskujemy na jej efektywności. Jesteśmy dość ujednoliceni pod względem kulturowym. Koledzy i koleżanki czują się pewnie podczas wygłaszania swoich wypowiedzi i nikt nie odczuwa strachu przed niezrozumieniem innych. Z czasem jest to element, który zaczynam uznawać się za oczywisty i przez brak kontaktu z ludźmi z innych kultur zaczyna wydawać się nudny i niezaspokajający ciekawości, oraz potrzeb napotykania wyzwań.&lt;/p&gt;

&lt;h1 id=&quot;zespół-anglojęzyczny&quot;&gt;Zespół anglojęzyczny&lt;/h1&gt;

&lt;p&gt;Jako jedyna osoba mówiąca w języku polskim trafiam do zespołu anglojęzycznego. Zyskuję poczucie pojawiającego się przede mną wyzwania i pracy na skalę globalną. Nie miałem wcześniejszego doświadczenia w komunikacji, więc w takich warunkach moja pewność siebie odrobinę spada. Czuję się osamotniony przez brak możliwości porozmawiania z kimś w zespole w języku polskim. Podczas rozmów pojawia się slang, idiomy, skróty myślowe oraz precyzyjne nazwy domenowe, których nie rozumiem. Tworzy to dodatkowy strach, ponieważ moim jedynym problemem nie jest jedynie omówienie architektury systemu, a dodatkowo - muszę omówić ją w języku angielskim. Z czasem jednak dostrzegam otwartość współpracujących ze mną ludzi i zaczyna mi się podobać, ponieważ moje umiejętności językowe błyskawicznie szybko progresują. Dostrzegam, że dzięki możliwości pracy w takim środowisku zdobywam umiejętności, które przydadzą mi się w codziennym życiu.&lt;/p&gt;

&lt;h1 id=&quot;zespół-mieszany&quot;&gt;Zespół mieszany&lt;/h1&gt;

&lt;p&gt;Nie znam charakterystycznych cech dla narodowościowych osób z którymi pracuje, przez co czasami narażam sie na gafę. Tworzą się grupki, które nie mówią, ani po polsku, ani po angielsku, a używają swojego natywnego języka, którego nikt poza nimi nie rozumie. Wzrastają koszty komunikacji i prowadzenia spotkań w języku angielskim. Na Slacku, Szwedzi rozmawiają po szwedzku, Francuzi po francusku, ja Polak … nie piszę. Najgorzej… Podczas zespołowej retrospekcji omawiamy zainstniały problem i decydujemy się na komunikację jedynie w języku angielskim ze względu na współną decyzję o chęci okazania szacunku każdemu z członków. Wszyscy na to przystają i w końcu zaczynamy działać jak zespół.&lt;/p&gt;

&lt;p&gt;Dochodzi do mnie, że w takich sytuacjach bardzo ważną rolę odgrywają proporcje - ile osób posługuje się którym językiem. Należy pamiętać, aby nikt nie pozostał sam. Trzeba zachować uprzejmość, a także okazać otwartość i ciekawość w komunikacji z każdym członków zespołu. Nie wytykać błędów. Razem się do siebie dostosować i zacząć zmierzać w tym samym kierunku po którego obraniu przyjemność ze współpracy jest niesamowicie wysoka.&lt;/p&gt;

&lt;h1 id=&quot;its-fun-isnt-it&quot;&gt;It’s’ fun! Isn’t it?!&lt;/h1&gt;

&lt;p&gt;W branży wytwarzania oprogramowania mamy to szczęście, że często jest ono naszą pasją. Poza samym zarabianiem na życie możemy sobie pozwolić na odnajdowanie szczęścia w tym co robimy.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Some 80% of your life is spent working. You want to have fun at home; why shouldn’t you have fun at work?&lt;/p&gt;

  &lt;p&gt;– &lt;cite&gt;Sir Richard Branson&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Poznawanie innych ludzi daje nam możliwość podnoszenia własnych kwalifikacji, umiejętności oraz wiedzy. Poczucie braku granic dzięki współpracy za pośrednictwem internetu daje nam nieznane dotąd możliwości uczenia się oraz zaspokajania własnej ciekawości. Być może podczas rozważań o kolejnych krokach kariery zawodowej warto rozważyć rzucenie się na głęboką wodę i potraktowanie naszej pracy jako możliwość poznawania świata?&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Life is a helluva lot more fun if you say yes rather than no.&lt;/p&gt;

  &lt;p&gt;– &lt;cite&gt;Sir Richard Branson&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;próba-sensownego-podsumowania&quot;&gt;Próba sensownego podsumowania&lt;/h1&gt;

&lt;p&gt;Musimy pamiętać, że komuniakcja stanowi jeden z większych kosztów w każdym projekcie informatycznym. Nie tylko dotyczy to języka jakim się posługujemy w kontekście “polskiego”, “angielskiego”, “francuskiego”, a także słownictwa jakie wykorzystujemy. Częstym problemem okazuje się dialog programistów z klientem, gdzie to klient jest zmuszany do używania terminów technicznych, podczas gdy to my jako osoby mające za zadanie pomóc naszemu klientowi powinniśmy się dostosować i używać bardziej rozumianych przez biznes określeń. Niby każdy mówi w tym samym języku, ale nikt się nie rozumie.&lt;/p&gt;

&lt;p&gt;To stanowi jednak bardzo szeroki problem, który omówię w przyszłości. Jako przedsmak, warto zapoznać się z pojęciem &lt;a href=&quot;https://martinfowler.com/bliki/UbiquitousLanguage.html&quot;&gt;UbiquitousLanguage&lt;/a&gt;, który został zaproponowany w książce Domain Driven Design, Tackling Complexity in the Heart of Software autorstwa Erica Evansa. Książka, którą jest napisana w niezbyt przyjazny sposób i naprawdę trzeba chcieć ją przeczytać… ale warto, koniecznie w języku angielskim.&lt;/p&gt;

&lt;p&gt;Warto również pamiętać, że jedna osoba nie posługująca się naszym językiem natywnym - tworzy z nas zespół wielojęzyczny.&lt;/p&gt;

&lt;hr /&gt;
&lt;h4 id=&quot;źródła-i-pojęcia&quot;&gt;Źródła i pojęcia&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;[1] &lt;a href=&quot;https://martinfowler.com/bliki/UbiquitousLanguage.html&quot;&gt;UbiquitousLanguage&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[2] &lt;a href=&quot;https://www.amazon.com/Domain-Driven-Design-Tackling-Complexity-Software/dp/0321125215&quot;&gt;Domain-Driven Design: Tackling Complexity in the Heart of Software, Eric Evans&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Rafał Makara</name></author><category term="zespol" /><category term="komunikacja" /><summary type="html">Programowanie pracą zespołową</summary></entry><entry><title type="html">Developer vs Project Manager 001: Wiedza o projekcie</title><link href="https://rmakara.github.io/notes/Dev-vs-PM-Wiedza-o-projekcie" rel="alternate" type="text/html" title="Developer vs Project Manager 001&amp;#58; Wiedza o projekcie" /><published>2017-06-15T00:00:00+02:00</published><updated>2017-06-15T00:00:00+02:00</updated><id>https://rmakara.github.io/notes/Dev-vs-PM-Wiedza-o-projekcie</id><content type="html" xml:base="https://rmakara.github.io/notes/Dev-vs-PM-Wiedza-o-projekcie">&lt;blockquote&gt;
  &lt;p&gt;Disclaimer: W serii Developer vs Project Manager opisuję kontrasty dla granicznych położeń tych ról. Zachowuję świadomość istnienia specjalistów posiadających wiele kompetencji miękkich oraz managerów posługujących się niskopoziomową wiedzą techniczną - te grupy świadomie pomijam.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;dwa-punkty-widzenia&quot;&gt;Dwa punkty widzenia&lt;/h1&gt;

&lt;p&gt;W swoim życiu pracowałem przez kilka tygodni jako filmowiec, sześć lat jako programista-tester-analityk-manager-architekt, trzy lata prowadziłem mini-3-osobową-firmę importującą towary z Chin i aktualnie od ponad roku staram się być project managerem. Każde z tych stanowisk zmuszało mnie do wykształcenia zupełnie innego sposobu postrzegania rzeczywistości. W serii krótkich artykułów porównam elementy różniące pozycje developera oraz managera. &lt;strong&gt;Porównania będą bazować na moich własnych doświadczeniach. Oznacza to, że te same kwestie osadzone w innym kontekście mogą okazać się nieprawdziwe.&lt;/strong&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Management is not a promotion. It is a career change.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;wiedza-o-projekcie&quot;&gt;Wiedza o projekcie&lt;/h1&gt;

&lt;p&gt;Branża IT skupia się na rozwiązywaniu problemów klientów, którzy korzystają z naszych usług. Powoduje to, że nabywana przez nas wiedza nie ogranicza się jedynie do pisanego kodu, a jednocześnie głęboko wchodzi w domenę na potrzeby której wytwarzamy dane oprogramowanie. W mojej historii poznałem trzy domeny, dotyczyły one produkcji mebli oraz ich sprzedaży na linii B2B, systemów płatniczych oraz eCommerce. Jak różniła się moja perspektywa w zależności od zajmowanego stanowiska?&lt;/p&gt;

&lt;h1 id=&quot;software-developer&quot;&gt;Software Developer&lt;/h1&gt;

&lt;p&gt;Zacząłem pracować jako programista na przełomie 19 i 20 roku życia. Można powiedzieć, że byłem dzieciakiem, który dość szybko dostał możliwość współpracy z firmami generującymi do kilkudziestu milionów złotych przychodu miesięcznie. Podczas niektórych delegacji do klientów, zdarzało mi się usłyszeć opinię o przysłaniu przedszkolaka do wdrożenia dużego oprogramowania. Po kilku tygodniach lub miesiącach współpracy z takimi firmami każda z nich ofiarowała mi swoje zaufanie i była w stanie powierzyć część odpowiedzialności za modyfikację oraz automatyzację procesów zachodzących w ich organizacjach. Przeprowadzane optymalizacje zazwyczaj wymagały znaczącej wiedzy dotyczącej meblarstwa, łańcucha dostaw, zamówień, logistyki, gospodarki magazynowej, fakturowania, analiz czy planowania produkcji. Skąd taki przypływ zaufania?&lt;/p&gt;

&lt;p&gt;Pracując nad dedykowanym dla branży meblowej, autorskim systemem ERP, który wytwarzaliśmy, miałem okazję poznać benefity wynikające z pracy w firmie produktowej. Naszymi produktami było kilka systemów kompleksowo obsługujących proces planowania zasobów przedsiębiorstwa. Fakt pracy nad tak małą liczbą (szalenie złożonych pod względem analitycznym) produktów oraz skupienia się tylko i wyłącznie nad branżą meblową pozwolił nam na wyspecjalizowanie się w danej domenie oraz gwarantował olbrzymią wiedzę o produkcie, który dostarczaliśmy. Spotkania z klientami stawiały nas w pozycji wygranej, ponieważ mieliśmy doświadczenie we współpracy z wieloma firmami meblowymi i w moment byliśmy w stanie znajdować rozwiązania problemów pojawiających się w firmach naszych klientów.&lt;/p&gt;

&lt;p&gt;Spędzanie 100% swojego czasu pracy bardzo blisko tworzonych rozwiązań oraz domeny daje olbrzymie poczucie pewności siebie, ponieważ gwarantuje szczegółową wiedzę, która utrudnia zagięcie nas podczas jakiejkolwiek rozmowy. W większości jest to wiedza odpowiadająca na pytania “co?” oraz “jak?”. Jednak w przypadku osób, których postrzegam jako senior developerów pojawia się również taka odpowiadająca na pytanie “dlaczego?”.&lt;/p&gt;

&lt;p&gt;Początkowa wiedza na tej ścieżce jest szczegółowa i dotyczy kolejno pojawiających się problemów. Dopiero seniorship daje możliwość spojrzenia długoterminowego.&lt;/p&gt;

&lt;p&gt;Gdy ktoś oczekuje od nas prezentacji wiedzy na stanowisku developera również jesteśmy w sytuacji komfortowej. Rzadko musimy odpowiadać na dowolne pytanie “na żywo”. Zazwyczaj jesteśmy obdarowani czasem na znalezienie rozwiązania, ułożenie odpowiedzi lub konsultację z zespołem - jeszcze przed legendarnym PMowym tekstem &lt;em&gt;“dowiem się i wrócę z odpowiedzią”&lt;/em&gt;.&lt;/p&gt;

&lt;h1 id=&quot;project-manager&quot;&gt;Project Manager&lt;/h1&gt;

&lt;p&gt;W roli PMa mam dość małe doświadczenie bazujące na pracy tylko w jednej firmie, więc mój punkt widzenia jest ograniczony. Ostatni rok postawił mnie jednak w wielu sytuacjach. Miałem okresy w których przydzielone były do mnie 3 projekty, a również takie w których projektów miałem 8. Ta druga sytuacja sprawia, że ma się jedynie 40 minut dziennie na zajęcie się każdym z projektów. Nawet sytuacja w której nadzoruje się tylko 3 projekty pozwala na spędzenie nad każdym z nich maksymalnie 2-3 godzin dziennie. Zestawiając to z pozycją specjalisty poświęconego w pełni jednemu projektowi liczba ta jest niesamowicie mała. Nie pozwala na wnikliwe wchodzenie w szczegóły każdego wytwarzanego dla klienta elementu. Szybko doprowadza to sytuacji w której specjaliści z którymi się pracuje nabywają wiedzę zadaniową zdecydowanie przewyższającą tą którą dysponuje PM. Zakres obowiązków managera kierowany jest głównie w stronę budżetowania, rozliczeń, planowania długoterminowego, zarządzania ryzykami. Sprawia to, że w przydzielonych nam 40-120 minutach dziennie brakuje czasu na niskopoziomowe zaangażowanie w wytwarzane rzeczy. Doprowadza to do sytuacji w której możemy odczuwać dyskomfort przez dużą chęć pomocy zespołowi z którym pracujemy na poziomie zadaniowym, uniemożliwioną niskim poziomem wiedzy o zadaniach. Tworzy równiez sytuacje w których kontaktując się z klientami brakuje nam wiedzy o szczegółowych elementach systemu. Wtedy musimy potrafić wykorzystać umiejętności oraz wiedzę specjalistów, którzy nas otaczają. Do tego potrzebna jest relacja oparta na współpracy i zaufaniu, dzięki którym zawsze możemy liczyć na pomoc.&lt;/p&gt;

&lt;p&gt;Wiedza, którą dysponuje PM w pierwszej kolejności odpowiada na pytania “dlaczego?”, a w dopiero później na pytanie “co?”. Rzadko się zdarza, że PM zaangażowany jest w odpowiedź na pytanie “jak?”.&lt;/p&gt;

&lt;p&gt;Sytuacje w których jesteśmy stawiani (rozmowy z ludźmi) wymagają od nas natychmiastowego udzielania odpowiedzi. Często zahaczają o tematy w których nie jesteśmy tak kompetentni jak specjaliści. Tematyka rozmów jest rozszerzona o zagadnienia wysokopoziomowe jak biznes, harmonogramy, dostarczanie wartości dla klienta w czasie, zwrot z inwestycji.&lt;/p&gt;

&lt;h1 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h1&gt;

&lt;p&gt;Obydwa powyższe punkty widzenia mają swoje plusy i minusy. Nie można jednoznacznie stwierdzić, że jedna ścieżka niesie za sobą więcej pozytywnych odczuć od drugiej lub wnosi do naszego życia mniej lub więcej stresu. Również problemy, które rozwiązujemy są skrajnie różne i nie można ich bezpośrednio do siebie przyrównać. Pozytywna lub negatywna ocena bazuje w większości na tym jakimi jesteśmy ludźmi, jakie emocje chcemy odczuwać i jakie problemy rozwiązywać podczas przechodzenia przez swoją ścieżkę zawodową.&lt;/p&gt;

&lt;p&gt;Streszczając cały artykuł do jednego zdania można powiedzieć, że programiści dysponują wyspecjalizowaną, szczegółową wiedzą o projekcie czasami nie zauważając większego obrazu, a managerowie skupieni są na ogóle i długoterminowym spojrzeniu, czesto z pominięciem szczegółów. Dla osiągnięciu sukcesu projektu konieczne jest wzajemne uzupełnianie się oraz partnerstwo między przedstawicielami obydwu ról.&lt;/p&gt;</content><author><name>Rafał Makara</name></author><category term="dajsiepoznac2017" /><category term="developer" /><category term="pm" /><category term="project" /><category term="manager" /><summary type="html">Disclaimer: W serii Developer vs Project Manager opisuję kontrasty dla granicznych położeń tych ról. Zachowuję świadomość istnienia specjalistów posiadających wiele kompetencji miękkich oraz managerów posługujących się niskopoziomową wiedzą techniczną - te grupy świadomie pomijam.</summary></entry><entry><title type="html">Gynveal's Mission 003: Optymalizacja</title><link href="https://rmakara.github.io/notes/Gynveals-Mission-003-Optymalizacja" rel="alternate" type="text/html" title="Gynveal&amp;#39;s Mission 003&amp;#58; Optymalizacja" /><published>2017-05-28T00:00:00+02:00</published><updated>2017-05-28T00:00:00+02:00</updated><id>https://rmakara.github.io/notes/Gynveals-Mission-003-Optymalizacja</id><content type="html" xml:base="https://rmakara.github.io/notes/Gynveals-Mission-003-Optymalizacja">&lt;h1 id=&quot;wystarczy-poczekać&quot;&gt;Wystarczy poczekać&lt;/h1&gt;

&lt;p&gt;Powodem pominięcia Misji 002 jest fakt, że trudno było mi wpaść na pomysł jej rozwiązania. Uznałem, że na dzień dzisiejszy potrzebuję czegoś bardziej trywialnego, a taka wydała się być Misja 003. Z czasem jednak wrócę do wykonania również zadania drugiego.&lt;/p&gt;

&lt;p&gt;Misja 003 zawiera gotowy do wykonania kod, który pokaże nam poszukiwane hasło.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Misja 003&lt;/strong&gt; &lt;br /&gt;
&lt;strong&gt;DIFFICULTY: [2/10]&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;Tym razem nie trzeba nic robić. Wystarczy uruchomić poniższy skrypt, chwilkę poczekać, a hasło zostanie wypisane. No, taką dłuższą chwilkę…&lt;/p&gt;
  &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#!/usr/bin/python&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;magic1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;magic2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magic1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;n1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2867279575674690971609643216365&quot;&lt;/span&gt;
         &lt;span class=&quot;s&quot;&gt;&quot;4161626212087501848651843132337&quot;&lt;/span&gt;
         &lt;span class=&quot;s&quot;&gt;&quot;3373323997065608342&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;n2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1240905467219837578349182398365&quot;&lt;/span&gt;
         &lt;span class=&quot;s&quot;&gt;&quot;3459812983123659128386518235966&quot;&lt;/span&gt;
         &lt;span class=&quot;s&quot;&gt;&quot;4109783723654812937&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magic2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;magic1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1337&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hex&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;splitlines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;
&lt;/blockquote&gt;

&lt;p&gt;Na pierwszy rzut oka program wygląda bardzo prosto. Poziom zadania określony jako 2/10 popiera tezę mówiącą o tym, że wystarczy uruchomić skrypt. W celu rozwiązania zadania ściągamy kod, zapisujemy w pliku &lt;code class=&quot;highlighter-rouge&quot;&gt;Gynveal_003.py&lt;/code&gt; i wykonujemy. Po dopiciu kawy tracimy nadzieję na otrzymanie wyniku jego działania i podejmujemy decyzję o przejściu do optymalizacji.&lt;/p&gt;

&lt;h1 id=&quot;analiza&quot;&gt;Analiza&lt;/h1&gt;

&lt;p&gt;W kodzie aplikacji mamy dwie zmienne &lt;code class=&quot;highlighter-rouge&quot;&gt;n1&lt;/code&gt; oraz &lt;code class=&quot;highlighter-rouge&quot;&gt;n2&lt;/code&gt; przechowujące bardzo duże wartości całkowite, które następnie wykorzystywane są jako parametry metody &lt;code class=&quot;highlighter-rouge&quot;&gt;magic1(n1, n2)&lt;/code&gt;. Ta następnie jest wykorzystywana jako parametr metody &lt;code class=&quot;highlighter-rouge&quot;&gt;magic2(magic1(n1, n2), 1337)&lt;/code&gt;. Żartobliwie, ostatnim parametrem jest &lt;a href=&quot;https://pl.wikipedia.org/wiki/Leet_speak&quot;&gt;leet&lt;/a&gt; popularyzowany w społeczności IRCowej już kilkanaście lat temu.&lt;/p&gt;

&lt;p&gt;Przeanalizujmy metodę &lt;code class=&quot;highlighter-rouge&quot;&gt;magic1(a, b)&lt;/code&gt;:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;magic1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Zauważamy, że zawiera ona dwie pętle w których liczba przebiegów jest uwarunkowana od &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; oraz &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;, czyli parametrów przekazywanych do metody. Pamiętając o naszych dwóch dużych zmiennych spostrzegamy, że daje nam to 4.108185e+80 iteracji. W ramach każdego z kolejnych przebiegów wartości zmiennych &lt;code class=&quot;highlighter-rouge&quot;&gt;o&lt;/code&gt; oraz &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; są sobie równe. Po zakończeniu pętli &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; wartość zmiennej jest zerowana w ramach przygotowania do wykonania kolejnej. Zmienna &lt;code class=&quot;highlighter-rouge&quot;&gt;o&lt;/code&gt; natomiast zerowana nie jest, a jest inkrementowana dalej w drugiej pętli, której liczba przebiegów jest zdefiniowana przez wartość parametru &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;W efekcie, pierwsza pętla ustawia wartość zmiennej &lt;code class=&quot;highlighter-rouge&quot;&gt;o&lt;/code&gt; na równą parametrowi &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;, a druga pętla zwiększa wartość zmiennej &lt;code class=&quot;highlighter-rouge&quot;&gt;o&lt;/code&gt; o wartość parametru &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;. Innymi słowy, metoda &lt;code class=&quot;highlighter-rouge&quot;&gt;magic1(a, b)&lt;/code&gt; realizuje operację dodawania. Możemy ją przekształcić do postaci:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;magic1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Druga z magicznych metod &lt;code class=&quot;highlighter-rouge&quot;&gt;magic2(a, b)&lt;/code&gt; na pierwszy rzut oka wygląda dość podobnie:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;magic2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magic1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;o&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wewnętrz pętli zawarte jest jednak wywołanie metody &lt;code class=&quot;highlighter-rouge&quot;&gt;magic1(o, a)&lt;/code&gt;. Podobnie jak w poprzednim przypadku &lt;code class=&quot;highlighter-rouge&quot;&gt;i&lt;/code&gt; jest inkrementowane, aż do uzyskania wartości równej parametrowi &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;. Zaczynamy z wartością &lt;code class=&quot;highlighter-rouge&quot;&gt;o&lt;/code&gt; ustawioną na 0. Wewnątrz pętli, do wartości &lt;code class=&quot;highlighter-rouge&quot;&gt;o&lt;/code&gt; jest przypisywany wynik dodawania otrzymany z metody &lt;code class=&quot;highlighter-rouge&quot;&gt;magic1(o, a)&lt;/code&gt;, czyli suma aktualnej wartości parametru &lt;code class=&quot;highlighter-rouge&quot;&gt;o&lt;/code&gt; i naszej dużej zmiennej &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;, dzieje się to tyle razy ile wynosi wartość zmiennej &lt;code class=&quot;highlighter-rouge&quot;&gt;b&lt;/code&gt;. Oznacza to, że metoda realizuję operację mnożenia. Optymalizujemy przekształcając do postaci:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;magic2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finalna wersja naszego zoptymalizowanego programu wygląda następująco:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;magic1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;magic2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;n1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;2867279575674690971609643216365&quot;&lt;/span&gt;
         &lt;span class=&quot;s&quot;&gt;&quot;4161626212087501848651843132337&quot;&lt;/span&gt;
         &lt;span class=&quot;s&quot;&gt;&quot;3373323997065608342&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;n2&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;1240905467219837578349182398365&quot;&lt;/span&gt;
         &lt;span class=&quot;s&quot;&gt;&quot;3459812983123659128386518235966&quot;&lt;/span&gt;
         &lt;span class=&quot;s&quot;&gt;&quot;4109783723654812937&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;magic2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;magic1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1337&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hex&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;splitlines&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jego wykonanie zwraca wynik:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;n&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;549264340234998467129494984689502898642039973222263002891494221114915022603203250023&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Ostatnia linia konwertuje wartość zapisaną w systemie dziesiętnym na system szesnastkowy. Wycina początkowe &lt;code class=&quot;highlighter-rouge&quot;&gt;0x&lt;/code&gt; z notacji i dekoduje wszystkie kolejne bajty, aż do ostatniego znaku, tym samym zwracając:&lt;/p&gt;
&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;Haslo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;WolneOprogramowanie!&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h1&gt;

&lt;p&gt;Mi osobiście po realizacji tego zadania do głowy dwa wnioski. Pierwszy z nich to cytat:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Premature optimization is the root of all evil.&lt;/p&gt;

  &lt;p&gt;– &lt;cite&gt;Donald Knuth&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Zakładając, że kod z zadania byłby kodem produkcyjnym można byłoby wyobrazić sobie, że przyjęte rozwiązanie było wydajne, dobre i szybkie do zaimplementowania w początkowym okresie istnienia systemu. Bardzo dobrze, że na tym etapie nie było optymalizowane. Dopiero gdy nasze wielkie liczby niepozwoliły na jego wykonanie mogliśmy upewnić się, że cały system działa poprawnie dla mniejszych danych, mogliśmy zmierzyć wydajność jego działania przy użyciu &lt;a href=&quot;https://en.wikipedia.org/wiki/Profiling_(computer_programming)&quot;&gt;profilera&lt;/a&gt; i wykazać wąskie gardła, a dopiero w kolejnych kroku zabrać się za optymalizację optymalizację. Problem ten został szczegółowo omówiony w artykule &lt;a href=&quot;http://wiki.c2.com/?PrematureOptimization&quot;&gt;Premature Optimization&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Drugim z wniosków jest ponownie popularny cytat:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Done is better than perfect.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Branża IT cechuje się tym, że przy realizacji projektów istniejących wystarczająco długo perfekcjonizm można włożyć między bajki. W pełni czyste podejście do wytwarzania oprogramowania często okaże się być jednym z większym wrogów. Należy pamiętać, że pracą programistów nie jest pisanie wspaniałych klas, zyskiwania milisekund na rzadko wykonywanych operacjach, sprowadzanie wysokopoziomowych operacji do żonglowania wartościami między rejestrami przy użyciu assembly. Naszym zadaniem jest dostarczanie wartościowych dla klienta rozwiązań problemów, które będą dla niego jak najlepsze w danym czasie lub w spojrzeniu perspektywicznym. To jednak nie oznacza perfekcjonizmu. Jako uzupełnienie tego wniosku warto przytoczyć &lt;a href=&quot;http://www.manifestoproject.it/bre-pettis-and-kio-stark/&quot;&gt;The Cult of Done Manifesto&lt;/a&gt; z którego moimi ulubionymi elementami są:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;2.Accept that everything is a draft. It helps to get done.&lt;/p&gt;

  &lt;p&gt;5.Banish procrastination. If you wait more than a week to get an idea done, abandon it.&lt;/p&gt;

  &lt;p&gt;10.Failure counts as done. So do mistakes.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&quot;źródła-i-pojęcia&quot;&gt;Źródła i pojęcia&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;[1] &lt;a href=&quot;https://www.youtube.com/watch?v=xR0hAJPp1vs&quot;&gt;Gynvael’s Livestream #39: RPC, czyli zdalne API&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[2] &lt;a href=&quot;https://pl.wikipedia.org/wiki/Leet_speak&quot;&gt;Leet speak, Wikipedia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[3] &lt;a href=&quot;https://en.wikipedia.org/wiki/Profiling_(computer_programming)&quot;&gt;Profiling, Wikipedia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[4] &lt;a href=&quot;http://wiki.c2.com/?PrematureOptimization&quot;&gt;Premature Optimization, Donald Knuth&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[5] &lt;a href=&quot;http://www.manifestoproject.it/bre-pettis-and-kio-stark/&quot;&gt;The Cult of Done Manifesto&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Rafał Makara</name></author><category term="dajsiepoznac2017" /><category term="gynveal" /><category term="coldwind" /><category term="code" /><summary type="html">Wystarczy poczekać</summary></entry><entry><title type="html">Gynveal's Mission 001: Szyfrowanie XORem</title><link href="https://rmakara.github.io/notes/Gynveals-Mission-001-Szyfrowanie-XORem" rel="alternate" type="text/html" title="Gynveal&amp;#39;s Mission 001&amp;#58; Szyfrowanie XORem" /><published>2017-05-19T00:00:00+02:00</published><updated>2017-05-19T00:00:00+02:00</updated><id>https://rmakara.github.io/notes/Gynveals-Mission-001-Szyfrowanie-XORem</id><content type="html" xml:base="https://rmakara.github.io/notes/Gynveals-Mission-001-Szyfrowanie-XORem">&lt;h1 id=&quot;misje-gynvaela-coldwinda&quot;&gt;Misje Gynvaela Coldwinda&lt;/h1&gt;

&lt;p&gt;Gynveal pracuje jako Security Engineer w Google oraz jest kapitanem jednej z topowych drużyn CTF Security na świecie. Napisał takie książki jak &lt;a href=&quot;https://zrozumiecprogramowanie.pl/#/mainPage&quot;&gt;Zrozumieć programowanie&lt;/a&gt; i &lt;a href=&quot;http://gynvael.coldwind.pl/?id=630&quot;&gt;Praktyczna Inżynieria Wsteczna&lt;/a&gt;. Prowadzi &lt;a href=&quot;http://gynvael.coldwind.pl/0&quot;&gt;blog&lt;/a&gt;, &lt;a href=&quot;https://www.youtube.com/user/GynvaelEN&quot;&gt;anglojęzyczny kanał YouTube&lt;/a&gt; oraz &lt;a href=&quot;https://www.youtube.com/user/GynvaelColdwind&quot;&gt;polskojęzyczny kanał YouTube&lt;/a&gt;. W ramach tego ostatniego, realizuje cotygodniowe live streamy dotyczące programowania oraz bezpieczeństwa oprogramowania. Ostatnimi czasy, chcąc bardziej zaangażować swoich widzów zaczął udostępniać zadania do wykonania nawiązujące do tematyki odcinka. Okazują się one być bardzo ciekawe. Seria Gynveal`s Mission omawiać będzie moje realizacje zadań, pochodzących ze streamów Gynveala.&lt;/p&gt;

&lt;h1 id=&quot;jak-nie-szyfrować---xor&quot;&gt;Jak nie szyfrować - XOR&lt;/h1&gt;

&lt;p&gt;W ramach odcinku &lt;a href=&quot;https://www.youtube.com/watch?v=fBEe8DGZL5o&quot;&gt;Gynvael’s Livestream #37: Jak nie szyfrować - XOR&lt;/a&gt; omówiony został problem dotyczący pokładania wiary w bezpieczeństwo ciągów danych zaszyfrowanych przez XOR’owanie każdego bitu z nieznanym kluczem. Live stream prezentuje wykorzystanie &lt;a href=&quot;https://pl.wikipedia.org/wiki/Atak_statystyczny&quot;&gt;ataku statystycznego&lt;/a&gt; celem odszyfrowanie tekstu. Z całego live streamu najbardziej spodobało mi się wykorzystanie hex editora z funkcjonalnością wizualizacji zapalonych i zgaszynych bitów do ustalenia długości wykorzystanego klucza. Polecam.&lt;/p&gt;

&lt;p&gt;W każdym razie, odcinek kończy się następującym zadaniem:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Misja 001&lt;/strong&gt; &lt;br /&gt;
&lt;strong&gt;DIFFICULTY: [4/10]&lt;/strong&gt;&lt;/p&gt;

  &lt;p&gt;Nasi przyjaciele z sekcji dziewiątej założyli podsłuch w biurze podejrzanego. Należy dodać, że to podsłuch najnowszej generacji. Posiada on m.in. wbudowaną sieć neuronową, która od razu zapisuje wszystkie rozpoznane słowa w formie tekstu. Co więcej, każde słowo jest oddzielnie szyfrowane XOR’em przy użyciu tego samego 160-bitowego klucza.&lt;/p&gt;

  &lt;p&gt;Ii… no… zgubiliśmy klucz. Trochę wstyd prosić sekcję dziewiątą znowu o pomoc, więc zadanie odzyskania danych i klucza powierzamy Tobie. Oto dane, które otrzymaliśmy:&lt;/p&gt;

  &lt;p&gt;1f9111
1799
0790001226d8
0a9e1e5c3ada
1f
099e195e
0a97075a21dac1
0a9710
199e075131d3
1199
12961350&lt;/p&gt;

  &lt;p&gt;Wiemy, że podejrzany posługuje się wyłącznie językiem angielskim.&lt;/p&gt;

  &lt;p&gt;Rozszyfruj słowa i podaj odzyskany fragment klucza.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;czytanie-ze-zrozumieniem&quot;&gt;Czytanie ze zrozumieniem&lt;/h1&gt;

&lt;p&gt;Na początek, wylistujmy istotne elementy z powyższej treści:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Zaszyfrowane dane są tekstem.&lt;/li&gt;
  &lt;li&gt;Tekst jest zapisany w języku angielskim, więc wszystkie słowa pochodzą z języka angielskiego.&lt;/li&gt;
  &lt;li&gt;Do zaszyfrowania tekstu XOR’em został użyty 160-bitowy klucz.&lt;/li&gt;
  &lt;li&gt;Wszystkie słowa zostały zaszyfrowane osobno, przy użyciu dokładnie tego samego klucza.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Wiemy o języku angielskim, który występuje w wersji oryginalnej tekstu. Daje nam to możliwość przeprowadzenia ataku statystycznego, który został omówiony w firmie Gynveala. Tutaj jednak mamy dodatkową informację mówiącą o tym, że słowa zostały zaszyfrowane osobno. W związku z tym, że długość klucza (160 bitów) jest dłuższa od najdłuższego z zaszyfrowanych słów (56 bitów) można byłoby założyć, że mamy do czynienia z &lt;a href=&quot;https://en.wikipedia.org/wiki/One-time_pad&quot;&gt;one-time pad&lt;/a&gt;. Jednak zaszyfrowanie każdego ze słów osobno sprawia, że tak nie jest i jednocześnie daje nam możliwość wykorzystania metody &lt;a href=&quot;https://en.wiktionary.org/wiki/educated_guess&quot;&gt;educated guessing&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;rozwiązanie&quot;&gt;Rozwiązanie&lt;/h1&gt;

&lt;p&gt;Przygotujmy sobie tablicę zawierającą zaszyfrowany tekst. Dla ułatwienia odczytywania poszczególnych liter zapiszę każdy z bajtów osobno:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x91&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x07&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x00&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x26&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xd8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x9e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x1e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x5c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x3a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x1f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x09&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x9e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x5e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x97&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x07&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x5a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x21&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xda&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xc1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x0a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x97&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x19&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x9e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x07&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x51&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x31&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0xd3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x99&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
 &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0x12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x96&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x50&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;W powyższym tekście widać, że:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;1 słowo składa się z jednego bajtu,&lt;/li&gt;
  &lt;li&gt;2 słowa składają się z 2 bajtów,&lt;/li&gt;
  &lt;li&gt;2 słowa składają się z 3 bajtów,&lt;/li&gt;
  &lt;li&gt;2 słowa składają się z 4 bajtów,&lt;/li&gt;
  &lt;li&gt;3 słowa składają się z 6 bajtów,&lt;/li&gt;
  &lt;li&gt;1 słowo składa się z 7 bajtów.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pamiętając o tym, że jest to tekst anglojęzyczny możemy wywnioskować, że jedyne jednoliterowe słowa występujące w języku angielskim to &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; oraz &lt;code class=&quot;highlighter-rouge&quot;&gt;I&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Tablica prawdy XOR’a wygląda następująco:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;p&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;q&lt;/th&gt;
      &lt;th style=&quot;text-align: center&quot;&gt;p ^ q&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;1&lt;/td&gt;
      &lt;td style=&quot;text-align: center&quot;&gt;0&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Na jej podstawie można wywnioskować, że:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;a^k ^ b^k&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;jest równoznaczne z:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;a^b&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Taką zależność można zobrazować poniższym kodem:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b111111&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b101001&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b010101&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;		&lt;span class=&quot;c&quot;&gt;# 0b111111&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;		&lt;span class=&quot;c&quot;&gt;# 0b101001&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;		&lt;span class=&quot;c&quot;&gt;# 0b10101&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;		&lt;span class=&quot;c&quot;&gt;# 0b101010&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;		&lt;span class=&quot;c&quot;&gt;# 0b111100&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'-'&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;	&lt;span class=&quot;c&quot;&gt;# 0b10110&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;^&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;		&lt;span class=&quot;c&quot;&gt;# 0b10110&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dzięki powyższym faktom, możemy spróbować wyciągnąć wykorzystać słowo &lt;code class=&quot;highlighter-rouge&quot;&gt;0x1f&lt;/code&gt; przy założeniu, że jest to &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt; lub &lt;code class=&quot;highlighter-rouge&quot;&gt;I&lt;/code&gt;. Tworzymy funkcję:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;Xor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hex_letter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;chr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hex_letter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_index&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;oraz tablicę, która posłuży nam do przechowywania klucza i umieszczamy w niej pierwszy bajt powstały przez XOR &lt;code class=&quot;highlighter-rouge&quot;&gt;0x1f&lt;/code&gt; ze słowem &lt;code class=&quot;highlighter-rouge&quot;&gt;a&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Teraz tworzymy pętlę, która wyświetli nam na ekranie wszystkie z zaszyfrowanych słów odszyfrowanych przy użyciu klucza przechowywanego w tablicy &lt;code class=&quot;highlighter-rouge&quot;&gt;keys&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;k&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)):&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Xor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Wynik:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0x1f 0x91 0x11 
a
0x17 0x99 
i
0x7 0x90 0x0 0x12 0x26 0xd8 
y
0xa 0x9e 0x1e 0x5c 0x3a 0xda 
t
0x1f 
a
0x9 0x9e 0x19 0x5e 
w
0xa 0x97 0x7 0x5a 0x21 0xda 0xc1 
t
0xa 0x97 0x10 
t
0x19 0x9e 0x7 0x51 0x31 0xd3 
g
0x11 0x99 
o
0x12 0x96 0x13 0x50 
l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jeżeli pierwszy znak naszego klucza jest poprawny to możemy założyć, że pierwsze trzyliterowe słowo to &lt;code class=&quot;highlighter-rouge&quot;&gt;and&lt;/code&gt;. Podstawiamy te znaki do tablicy z kluczem i testujemy:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wynik:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0x1f 0x91 0x11 
and
0x17 0x99 
if
0x7 0x90 0x0 0x12 0x26 0xd8 
you
0xa 0x9e 0x1e 0x5c 0x3a 0xda 
tak
0x1f 
a
0x9 0x9e 0x19 0x5e 
wal
0xa 0x97 0x7 0x5a 0x21 0xda 0xc1 
thr
0xa 0x97 0x10 
the
0x19 0x9e 0x7 0x51 0x31 0xd3 
gar
0x11 0x99 
of
0x12 0x96 0x13 0x50 
lif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Odszyfrowany fragment wygląda dobrze, ponieważ zawiera w pełni poprawne słówko &lt;code class=&quot;highlighter-rouge&quot;&gt;the&lt;/code&gt;. Wyszukujemy słowo w którym brakuje nam tylko jednej literki (ostatnie) i domyślamy się, że &lt;code class=&quot;highlighter-rouge&quot;&gt;lif?&lt;/code&gt; może oznaczać &lt;code class=&quot;highlighter-rouge&quot;&gt;life&lt;/code&gt;. Podstawiamy do tablicy z kluczem:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'e'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Tym razem, wynik zawiera poprawnie odszyfrowane słówko &lt;code class=&quot;highlighter-rouge&quot;&gt;walk&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0x1f 0x91 0x11 
and
0x17 0x99 
if
0x7 0x90 0x0 0x12 0x26 0xd8 
you'
0xa 0x9e 0x1e 0x5c 0x3a 0xda 
taki
0x1f 
a
0x9 0x9e 0x19 0x5e 
walk
0xa 0x97 0x7 0x5a 0x21 0xda 0xc1 
thro
0xa 0x97 0x10 
the
0x19 0x9e 0x7 0x51 0x31 0xd3 
gard
0x11 0x99 
of
0x12 0x96 0x13 0x50 
life
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Skupiamy się na słowach sześcioznakowych i początku &lt;code class=&quot;highlighter-rouge&quot;&gt;you'&lt;/code&gt;. Można zaryzykować, że chodzi o &lt;code class=&quot;highlighter-rouge&quot;&gt;you're&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'e'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'e'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Wynik:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0x1f 0x91 0x11 
and
0x17 0x99 
if
0x7 0x90 0x0 0x12 0x26 0xd8 
you're
0xa 0x9e 0x1e 0x5c 0x3a 0xda 
taking
0x1f 
a
0x9 0x9e 0x19 0x5e 
walk
0xa 0x97 0x7 0x5a 0x21 0xda 0xc1 
throug
0xa 0x97 0x10 
the
0x19 0x9e 0x7 0x51 0x31 0xd3 
garden
0x11 0x99 
of
0x12 0x96 0x13 0x50 
life
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Do końcu słówka &lt;code class=&quot;highlighter-rouge&quot;&gt;throug&lt;/code&gt; dodajemy literkę &lt;code class=&quot;highlighter-rouge&quot;&gt;t&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'n'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'d'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'e'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'r'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'e'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ord&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'t'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;dzięki czemu otrzymujemy w pełni odszyfrowany tekst:&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;0x1f 0x91 0x11 
and
0x17 0x99 
if
0x7 0x90 0x0 0x12 0x26 0xd8 
you're
0xa 0x9e 0x1e 0x5c 0x3a 0xda 
taking
0x1f 
a
0x9 0x9e 0x19 0x5e 
walk
0xa 0x97 0x7 0x5a 0x21 0xda 0xc1 
througt
0xa 0x97 0x10 
the
0x19 0x9e 0x7 0x51 0x31 0xd3 
garden
0x11 0x99 
of
0x12 0x96 0x13 0x50 
life
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Możemy teraz odczytać pierwsze 7 bajtów klucza:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Key: '&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stdout&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;' '&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;wynik-rozwiązania&quot;&gt;Wynik rozwiązania&lt;/h1&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Encrypted text:
1f9111 1799 0790001226d8 0a9e1e5c3ada 1f 099e195e 0a97075a21dac1 0a9710 199e075131d3 1199 12961350

Key: 
0x7e 0xff 0x75 0x35 0x54 0xbd 0xb5 

Decrypted text: 
and if you're taking a walk throught the garden of life
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;podsumowanie&quot;&gt;Podsumowanie&lt;/h1&gt;

&lt;p&gt;Głównym wnioskiem, który moglibyśmy pozostawić w tym miejscu jest to, że dane niemożliwe do odczytania przez człowieka w żadnym stopniu nie mówią o stopniu ich bezpieczeństwa. Wytwarzając oprogramowanie należy inwestować w często pomijane bezpieczeństwo. Podobnie jak umowy zawierane między firmami, czas poświęcony na security okazuje się być bezcenny, a jego prawdziwą wartość można docenić dopiero w czasie ‘wojny’.&lt;/p&gt;

&lt;p&gt;Powyższy artykuł został napisany podczas jednego z najwięszych ataków Ransomware na swiecie - WannaCry.&lt;/p&gt;

&lt;h4 id=&quot;źródła-i-pojęcia&quot;&gt;Źródła i pojęcia&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;[1] &lt;a href=&quot;https://zrozumiecprogramowanie.pl/#/mainPage&quot;&gt;Gynveal Coldwind, Zrozumieć programowanie&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[2] &lt;a href=&quot;http://gynvael.coldwind.pl/?id=630&quot;&gt;Gynveal Coldwind, Praktyczna Inżynieria Wsteczna&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[3] &lt;a href=&quot;http://gynvael.coldwind.pl/0&quot;&gt;Gynveal Coldwind, Blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[4] &lt;a href=&quot;https://www.youtube.com/user/GynvaelEN&quot;&gt;Gynveal Coldwind, YouTube ENG&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[5] &lt;a href=&quot;https://www.youtube.com/user/GynvaelColdwind&quot;&gt;Gynveal Coldwind, YouTube PL&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[6] &lt;a href=&quot;https://www.youtube.com/watch?v=fBEe8DGZL5o&quot;&gt;Gynvael’s Livestream #37: Jak nie szyfrować - XOR&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[7] &lt;a href=&quot;https://pl.wikipedia.org/wiki/Atak_statystyczny&quot;&gt;Atak statystyczny&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[8] &lt;a href=&quot;https://en.wikipedia.org/wiki/One-time_pad&quot;&gt;One-time pad&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[9] &lt;a href=&quot;https://en.wiktionary.org/wiki/educated_guess&quot;&gt;Educated guessing&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Rafał Makara</name></author><category term="dajsiepoznac2017" /><category term="security" /><category term="gynveal" /><category term="coldwind" /><category term="code" /><summary type="html">Misje Gynvaela Coldwinda</summary></entry><entry><title type="html">OnEstimates. Część II: Techniki estymowania</title><link href="https://rmakara.github.io/notes/OnEstimates-Czesc-II-Techniki-estymowania" rel="alternate" type="text/html" title="OnEstimates. Część II&amp;#58; Techniki estymowania" /><published>2017-05-09T00:00:00+02:00</published><updated>2017-05-09T00:00:00+02:00</updated><id>https://rmakara.github.io/notes/OnEstimates-Czesc-II-Techniki-estymowania</id><content type="html" xml:base="https://rmakara.github.io/notes/OnEstimates-Czesc-II-Techniki-estymowania">&lt;h1 id=&quot;norma-czyli-wszystko-na-już&quot;&gt;Norma, czyli wszystko “na już”&lt;/h1&gt;

&lt;p&gt;W momencie zapytania specjalisty o czas realizacji danego zadania - niezaleznie od jego objętości - dość szybko można uzyskać liczbę godzin w jakim szacunkowo będzie mogło ono zostać zrealizowane. Czasami taki proces estymowania trwa od kilku do kilkunastu sekund. Takie sytuacje obarczone są jednak dużym ryzykiem błędu. Na podstawie doświadczeń zebranych z punktu widzenia programisty oraz punktu widzenia project managera stwierdzam, że pytanie:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ile czasu zajmie Ci realizacja zadania X?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;gwarantuje uzyskanie bezwartościowej odpowiedzi. Bardziej wartościowym sformułowaniem okazuje się być:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Kiedy będziesz wiedział(a) ile czasu zajmie Ci realizacja zadania X?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Postawienie specjalisty przed takim wyzwaniem umożliwia przygotowanie się do udzielenia odpowiedzi, granulacji zadania i zrobienia wstępnego rozeznania. W efekcie, taka lingwistyczna modyfikacja w przypadku estymacji potrzebnych “na już” umożliwia uzyskanie kompetentnej odpowiedzi, nawet po 10-15 minutach.&lt;/p&gt;

&lt;h1 id=&quot;granulacja&quot;&gt;Granulacja&lt;/h1&gt;

&lt;p&gt;Niezależnie od przyjętej techniki estymowania nieodłącznym krokiem wyceny danego zakresu pracy jest jego rozbicie na mniejsze elementy. Ocena epicu, który będzie realizowany przez najbliższe 3 miesiące lub nawet historyjki pozornie wymagającego dwóch dni pracy w postaci jednej liczby jest dość naiwnym posunięciem. Podział na podpunkty z których każdy zajmie od 0 do 4 godzin daje zdecydowanie lepsze efekty. Wyobraźmy sobie, że musimy przygotować mechanizm weryfikacji dwuetapowej (2FA), który będzie wykorzystywany w systemie umożliwiającym wykonywanie transferów pieniężnych pomiędzy kontami. Analizując jego estymację w głowię można rzucić losową liczbę godzin już po 10 sekundach. W takiej sytuacji, w przypadku chęci weryfikacji tej liczby można byłoby zastosować na niej technikę 5 Why. Możemy jednak spróbować rozbić zadanie na podzadania:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Stworzenie paczki 2FA.&lt;/li&gt;
  &lt;li&gt;Przemyślenie zależności i ich wstrzykiwania.&lt;/li&gt;
  &lt;li&gt;Stworzenie kontrolera obsługującego request.&lt;/li&gt;
  &lt;li&gt;Stworzenie handlera / serwisu zawierającego logikę działania.&lt;/li&gt;
  &lt;li&gt;Stworzenie mechanizmu generowania kodów jednorazowych.&lt;/li&gt;
  &lt;li&gt;Stworzenie interfejsu odpowiadającego za wysyłkę kodów.&lt;/li&gt;
  &lt;li&gt;Stworzenie klasy implementującej powyższy interfejs dla wysyłki w formie maila.&lt;/li&gt;
  &lt;li&gt;Stworzenie klasy implementującej powyższy interfejs dla wysyłki w formie sms.&lt;/li&gt;
  &lt;li&gt;Stworzenie konfiguracji umożliwiającej zdefiniowanie długości kodów jednorazowych, sposobu wysyłki kodu (mail, sms), którą później wykorzystamy w naszym serwisie 2FA.&lt;/li&gt;
  &lt;li&gt;Spięcie wszystkiego razem.&lt;/li&gt;
  &lt;li&gt;Testy jednostkowe.&lt;/li&gt;
  &lt;li&gt;Testy manualne.&lt;/li&gt;
  &lt;li&gt;apiDoc.&lt;/li&gt;
  &lt;li&gt;Komunikacja w zakresie doprecyzowania wymagań co do których wątpliwości pojawiły nam się podczas tworzenia podzadań (czy sms, czy email, czy kody numeryczne, czy alfanumeryczne, czas ważności kodu, czy function as a service).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Powyższa lista być może pomija kilka istotnych punktów. Daje jednak pewne wyobrażenie na to jak rozwiązanie będzie zaimplementowane i pokazuje, że zostało to wstępnie przemyślane i tym samym udostępnia tą wiedzę innym członkom zespołu. Estymacja każdego z powyższych podzadań pomaga w celnym oszacowaniu całości. Taka forma wzbudza zaufanie specjalisty, managera i klienta.&lt;/p&gt;

&lt;h1 id=&quot;jednostka-pierwsza---godziny-idealne&quot;&gt;Jednostka pierwsza - Godziny idealne&lt;/h1&gt;

&lt;p&gt;Najbardziej oczywistą jednostką wyrażającą szacunkową wartość, która poinformuje nas o koszcie realizacji danych czynności wydają się być godziny. Ze względu na fakt powszechności jej stosowania w naszym życiu codziennym wiele osób rozumie czas poświęcany na pracę w ciągu jednego dnia jako 8 godzin. W przypadku wyceny zadania na 24 godziny wydaje się być oczywistym, że czas jego realizacji to 3 dni robocze, czyli zadanie rozpoczęte w poniedziałek będzie gotowe na czwartek rano. Należy jednak pamiętać, że ludzie nie są w stanie wydajnie pracować przez 100% swojego czasu. Dodatkowo, należy od tej wartości odjąć czas na rzeczy towarzyszące naszej codzienności tj. lunch, kawę, spotkania, plotki oraz Wykop. Po urealnieniu wspomnianych 8 godzin okazuje się, że wydajnie pracujemy od 3 do 6 godzin dziennie.&lt;/p&gt;

&lt;p&gt;Innym problemem płynącym z estymacji w postaci godzin idealnych (ang. ideal hours) jest różnica w poziomie umiejętności ludzi oraz presja pojawiająca się przy estymowaniu grupowym. Jeżeli proces wygląda tak, że zespół w pierwszej kolejności szacuje zadania do realizacji, a dopiero potem rozdziela je na konkretne osoby to wspólnie uzyskana estymata może być realna do osiągnięcia przez osobę mającą 5-letnie doświadczenie, a w przypadku przyporządkowania tego samego zadania do osoby dopiero rozpoczynającej swoją karierę - czas potrzebny na realizację będzie 12-krotnie wyższy. Taki problem można ominąć przez odwrócenie procesu i estymowanie czasu realizacji dopiero po wyznaczeniu konkretnych osób, które będą nad danymi zadaniami pracować. Wtedy jednak pojawia się stres i presja, a przez to tracimy największą wartość płynącą z estymacji grupowych - prawdziwą pracę zespołową, różne i obiektywne punkty widzenia.&lt;/p&gt;

&lt;h1 id=&quot;jednostka-druga---punkty-rozmiary-koszulek&quot;&gt;Jednostka druga - Punkty, rozmiary koszulek&lt;/h1&gt;

&lt;p&gt;Kolejną z jednostek są punkty (ang. story points). W wersjach alternatywnych możemy wykorzystywać również rozmiary koszulek (XS, S, M, L, XL, XXL) lub inne mniej, lub bardziej abstrakcyjne metafory. Punkty, których pula definiowana jest najczęściej przez liczby Fibonacciego (0, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144 […]) dają nam jednak wystarczająco wiele możliwości i nie zmuszają do wymyślania przenośni.&lt;/p&gt;

&lt;p&gt;Podstawową różnicą między godzinami idealnymi i punktami jest fakt, że punkty służą do określenia rozmiaru danego zadania, a nie czasu jego realizacji. Pokażą czy zadanie X jest mniejsze lub większe od innych. W związku z tym, że estymacje punktowe bazują w sporej mierze na porównaniach, prawdziwa ich wartość ukazuje się dopiero po pewnym czasie, gdy zespół posiada doświadczenie w estymowaniu zadań wewnątrz danego projektu i tym samym dysponuje większą liczbą punktów odniesienia do których może porównywać kolejne zadania.&lt;/p&gt;

&lt;p&gt;Taki sposób określenia zakresu zadania również rozwiązuje problem doświadczenia osoby, które będzie je realizowała. Niezależnie od tego czy będzie to osoba o mniejszym, czy większym doświadczeniu to na podstawie wspólnych ustaleń zespołu zadanie X stale jest mniejsze od zadania Y, a większe od zadania Z.&lt;/p&gt;

&lt;p&gt;Wraz ze wzrostem doświadczenia możliwe jest stawianie celów dotyczących granulacji na zasadzie “Chcemy, aby maksymalną możliwą estymatą było 13 punktów.”. Wartość ta, wraz ze wzrostwem umiejętności szacowania i wiedzy o projekcie może być zmniejszana o kolejne skoki, czyli w tym przypadku do 8 (-&amp;gt; 5 -&amp;gt; 3…) punktów.&lt;/p&gt;

&lt;p&gt;Zdecydowaną trudnością we wdrożeniu estymacji niegodzinowych jest konieczność przekonania klienta do wykorzystania wartości, których w pierwszym odczuciu nie można wykorzystać do wyliczenia szacunkowego kosztu danego zlecenia.&lt;/p&gt;

&lt;h1 id=&quot;jednostka-trzecia---noestimates&quot;&gt;Jednostka trzecia - NoEstimates&lt;/h1&gt;

&lt;p&gt;Kilka lat temu w świecie wytwarzania oprogramowania popularny zrobił się ruch popularyzowany przez hashtag #NoEstimates. Wbrew swojej nazwie, sposób ten nie polega na pełnej rezygnacji z szacowania pracy potrzebnej do wykonania, a na maksymalnym jej uproszczeniu. Wymaga jednak pewnej dojrzałości od zespołu i zakłada, że wszystkie historyjki będą zdefiniowane w taki sposób, aby ich objętość była podobna. Przy założeniu, że nauczymy się definiować wszystkie PBI (Product Backlog Item) tak, aby ich pracochłonność była podobna i była relatywnie mała to możemy badać progres w realizacji, prędkość zespołu (ang. velocity) przez zliczanie liczby historyjek obecnych w backlogu / rozpoczynanych / zamykanych w danym okresie czasu. W tej technice za jednostkę uznajemy pojedynczy PBI.&lt;/p&gt;

&lt;p&gt;Przedsmakiem do osiągnięcia takich umiejętności może być rozpoczęcie od estymacji punktowych i zmierzanie z nimi do szacowania wszystkich historyjek tylko przy użyciu liczb 0, 1, 2.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;#NoEstimates nie jest porzuceniem estymowania, mierzenia, budżetowania.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;scrum&quot;&gt;Scrum&lt;/h1&gt;

&lt;p&gt;Wykorzystywanie najpopularniejszego frameworku w świecie IT do organizacji pracy zespołowej uczy nas spotkań refinementowych / groomingowych oraz planingowych. Te pierwsze poświęcone są rozbijaniu zadań na mniejsze, doprecyzowywaniu, niwelowaniu zależności między nimi oraz estymowaniu (!#NoEstimates). Drugie natomiast, poświęcane są na dobór odpowiedniej liczby priorytetowych zadań do rozpoczynanego Sprintu, które uprzednio zostały wyznaczone przez Product Ownera oraz do wspólnego omówienia sposobu ich realizacji. Narzucenie takich ram pracy współgra z zespołowym podejściem do pracy, estymacji oraz wytwarzania oprogramowania.&lt;/p&gt;

&lt;h1 id=&quot;wartości-dla-zespołu-i-klienta&quot;&gt;Wartości dla zespołu i klienta&lt;/h1&gt;

&lt;p&gt;Rzetelne podejście do procesu granulacji oraz estymowania zadań niesie za sobą wiele benefitów zarówno dla firmy wytwarzającej oprogramowanie, jak i dla klienta, doprowadzając do sytuacji w której jest to proces opłacalny dla każdego. Dzięki zespołowym przeprowadzeniu tego procesu:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Szerzymy wiedzę zespołu o projekcie.&lt;/li&gt;
  &lt;li&gt;Gromadzimy mierzalne dane umożliwiające planowanie w perspektywie długoterminowej.&lt;/li&gt;
  &lt;li&gt;Dajemy sobie szansę na wyciąganie wniosków opartych o dane oraz dostosowywanie procesu dla podnoszenia efektywności.&lt;/li&gt;
  &lt;li&gt;Zwiększamy przewidywalność efektów możliwych do osięgnięcia w trakcie kolejnych iteracji.&lt;/li&gt;
  &lt;li&gt;Umożliwiamy Product Ownerowi realny dobór i priorytetyzację wartościowego dla Biznesu zakresu prac.&lt;/li&gt;
  &lt;li&gt;Grupowo zastanawiamy się nad złożonością zadań, efektywnie omawiamy sposób ich realizacji oraz minimalizujemy liczbę zaskoczeń mogących pojawiać się podczas realizacji zadania, dzięki jego wstępnej ocenie przez osoby o różnych punktach widzenia.&lt;/li&gt;
  &lt;li&gt;Obniżamy koszt wytworzenia oprogramowania.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;źródła-i-pojęcia&quot;&gt;Źródła i pojęcia&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;[1] &lt;a href=&quot;https://pl.wikipedia.org/wiki/Uwierzytelnianie_wielopoziomowe&quot;&gt;Uwierzytelnianie wielopoziomowe, Wikipedia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[2] &lt;a href=&quot;https://pl.wikipedia.org/wiki/Wstrzykiwanie_zale%C5%BCno%C5%9Bci&quot;&gt;Wstrzykiwanie zależności, Wikipedia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[3] &lt;a href=&quot;http://gorodinski.com/blog/2012/04/14/services-in-domain-driven-design-ddd/&quot;&gt;Services in Domain Driven Design&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[4] &lt;a href=&quot;http://stackoverflow.com/questions/195357/what-is-a-handler&quot;&gt;What is a handler&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[5] &lt;a href=&quot;http://apidocjs.com/&quot;&gt;apiDoc&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Rafał Makara</name></author><category term="dajsiepoznac2017" /><category term="onEstimates" /><category term="estymacje" /><summary type="html">Norma, czyli wszystko “na już”</summary></entry><entry><title type="html">OnEstimates. Część I: Too long, did not read</title><link href="https://rmakara.github.io/notes/OnEstimates-Czesc-I-Too-long-did-not-read" rel="alternate" type="text/html" title="OnEstimates. Część I&amp;#58; Too long, did not read" /><published>2017-03-27T00:00:00+02:00</published><updated>2017-03-27T00:00:00+02:00</updated><id>https://rmakara.github.io/notes/OnEstimates-Czesc-I-Too-long-did-not-read</id><content type="html" xml:base="https://rmakara.github.io/notes/OnEstimates-Czesc-I-Too-long-did-not-read">&lt;h1 id=&quot;przewidywanie-przeszłości&quot;&gt;Przewidywanie przeszłości&lt;/h1&gt;

&lt;p&gt;Wyobraźmy sobie, że mamy do zrealizowania projekt (lub produkt) dzięki któremu zarobimy pieniądze. Nasz Klient oczekuje od Nas zadeklarowania terminu, zakresu oraz budżetu w jakim prace zostaną zrealizowane. W celu przekazania takiej informacji estymujemy, czyli szacujemy jakiego rozmiaru, wielkości, kosztu są poszczególne elementy. Po zsumowaniu wszystkich części składowych, jesteśmy w stanie udzielić Klientowi informacji, której oczekuje. Czy na pewno?&lt;/p&gt;

&lt;p&gt;W serii czterech artykułów skupię się na wdrożeniu w temat estymacji, omówię wykorzystywane techniki, zagrożenia oraz odmienne perspektywy specjalistów oraz biznesu.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://rmakara.github.io/notes/OnEstimates-Czesc-I-Too-long-did-not-read&quot;&gt;OnEstimates. Część I: Too long, did not read&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rmakara.github.io/notes/OnEstimates-Czesc-II-Techniki-estymowania&quot;&gt;OnEstimates. Część II: Techniki estymowania&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://rmakara.github.io/notes/OnEstimates-Czesc-III-Zagrozenia-plynace-z-estymacji&quot;&gt;OnEstimates. Część III: Zagrożenia płynące z estymacji&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;OnEstimates. Część IV: Biznes/Manager vs Specjalista&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;estymacja-jest-trudna&quot;&gt;Estymacja jest trudna&lt;/h1&gt;

&lt;p&gt;W świecie IT, często przytaczane są statystyki mówiące, że opóźniona realizacja projektów w branży IT to standard. Liczba projektów zakończonych w planowanym czasie i budżecie to jedynie 30%. Na podstawie tej danej można wysnuć bardzo wiele wniosków - mówiących, dlaczego popełniamy błędy - z których każdy ma w sobie zarówno trochę prawdy, jak i fikcji:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;W momencie szacowania dysponujemy zbyt wąskim zakresem wiedzy.&lt;/li&gt;
  &lt;li&gt;Estymujemy prace, które będą realizowane przez kogoś innego, posiadającego inne kompetencje, niż nasze.&lt;/li&gt;
  &lt;li&gt;Estymujemy nie mając do tego odpowiednich kompetencji.&lt;/li&gt;
  &lt;li&gt;Wytwarzamy nie mając do tego odpowiednich kompetencji.&lt;/li&gt;
  &lt;li&gt;Jesteśmy zbyt wielkimi optymistami.&lt;/li&gt;
  &lt;li&gt;Pomijamy zależności od czynników/aktorów 3-cich.&lt;/li&gt;
  &lt;li&gt;Boimy się okazania swojego nieprofesjonalizmu w postaci podania zbyt pesymistycznej estymacji.&lt;/li&gt;
  &lt;li&gt;Boimy się mówić ”nie wiem”.&lt;/li&gt;
  &lt;li&gt;Szacujemy pod presją.&lt;/li&gt;
  &lt;li&gt;Dostosowujemy szacunki do procesu sprzedażowego.&lt;/li&gt;
  &lt;li&gt;Zapominamy o wliczaniu kosztów obecnych w tle wytwarzania oprogramowania (organizacja pracy, komunikacja, testowanie, analiza, wyjazdy), a skupiamy się jedynie na stukaniu w klawiaturę, rysowaniu lub malowaniu.&lt;/li&gt;
  &lt;li&gt;Boimy się odrzucenia i negatywnej reakcji osoby, która oczekuje od nas informacji.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Przewidywanie jest bardzo trudne, szczególnie jeśli idzie o przyszłość.&lt;/p&gt;

  &lt;p&gt;– &lt;cite&gt;Niels Bohr, Mark Twain i wielu innych&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;negocjacje&quot;&gt;Negocjacje&lt;/h1&gt;

&lt;p&gt;W rozumieniu wielu ludzi, pojęcie estymacji jest równoznaczne ze złożeniem wiążącej obietnicy. Zgodnie z takim punktem widzenia, Klient stara się wymóc najbardziej korzystny szacunek w procesie negocjacji. Warto jednak pamiętać, że wartości szacunkowe nie podlegają negocjacjom. Są one obiektywną oceną czasu potrzebnego na wytworzenie danej rzeczy dokonaną na podstawie aktualnie dostępnej wiedzy. Negocjowalne mogą być jedynie wymagania, zakres, termin, cena. Rozpoczynając negocjacje, Klient powinien odpowiedzieć na pytanie czy korzystniejsze będzie poznanie realnych wartości, czy odłożone w czasie zaskoczenie. My natomiast, powinniśmy starać się nie składać obietnic zbyt wcześnie, w celu ochrony siebie oraz Klienta. Warto edukować, że estymata to szacunek, a nie gwarancja. Prawdopodobieństwo jej dokładności będzie rosło w czasie, wraz ze wzrostem doświadczenia zespołu, znajomości projektu oraz liczby osób estymujących (mądrość tłumu). Należy również pamiętać, że wartość podana przez specjalistę, którą Klient (lub Manager) chce estymować - już jest zbyt optymistyczna.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Zadanie zawsze zajmie nam więcej, niż przewidywaliśmy. Nawet gdy weźmiemy pod uwagę prawo Hofstadtera.&lt;/p&gt;

  &lt;p&gt;– &lt;cite&gt;Prawo Hofstadtera, Douglas Hofstadter&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;prawdomówność&quot;&gt;Prawdomówność&lt;/h1&gt;

&lt;p&gt;Szacując dany zakres powinniśmy uświadamiać odbiorcę naszego komunikatu, że podawana wartość jest jedynie przybliżona i może okazać się błędna. Bez tego narażamy się na zarzucenie nam kłamstwa. Podnieść prawdziwość naszego komunikatu możemy przez rozbicie elementów na mniejsze i tym samym jawne wykazanie składowych z których wynika nasz szacunek. Możemy również wskazać optymistyczną i pesymistyczną wartość, które określą realny przedział - realizacja X zajmie od Y do Z osobodni - zamiast konkretnej wartości stwierdzonej z niskim prawdopodobieństwem.&lt;/p&gt;

&lt;h1 id=&quot;rozmowa-kwalifikacyjna&quot;&gt;Rozmowa kwalifikacyjna&lt;/h1&gt;

&lt;p&gt;Będąc na jednej z rozmów kwalifikacyjnych w moim życiu usłyszałem genialne pytanie:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Ile jest autobusów w mieście X?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Ma ono na celu weryfikację umiejętności estymowania u kandydata. Najgorszą możliwą odpowiedzią jest strzał konkretnej liczby. Najlepszą, nawiązanie dialogu z rozmówcą, domówienie szczegółow, wspólne dążenie do podniesienia prawdopodobieństwa na celne oszacowanie. Podobnie jak na tej rozmowie kwalifikacyjnej, warto traktować codzienną rzeczywistość specjalistów, managerów oraz biznesu jako wspólną drogę do osiągnięcia sukcesu przez każdą ze stron.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Praca rozszerza się tak, aby wypełnić czas dostępny na jej ukończenie.&lt;/p&gt;

  &lt;p&gt;– &lt;cite&gt;Prawo Parkinsona, Cyril Northcote Parkinson&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;h4 id=&quot;źródła-i-pojęcia&quot;&gt;Źródła i pojęcia&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;[1] &lt;a href=&quot;https://en.wikipedia.org/wiki/Parkinson%27s_law&quot;&gt;Prawo Parkinsona, Wikipedia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[2] &lt;a href=&quot;https://en.wikipedia.org/wiki/Hofstadter%27s_law&quot;&gt;Prawo Hofstadtera, Wikipedia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[3] &lt;a href=&quot;https://en.wikipedia.org/wiki/Wisdom_of_the_crowd&quot;&gt;Mądrość tłumu, Wikipedia&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Rafał Makara</name></author><category term="dajsiepoznac2017" /><category term="onEstimates" /><category term="estymacje" /><summary type="html">Przewidywanie przeszłości</summary></entry><entry><title type="html">Jira &amp;amp; Toggl. Jak uspójnić formę raportowania?</title><link href="https://rmakara.github.io/notes/Jira-Toggl-Jak-uspojnic-forme-raportowania" rel="alternate" type="text/html" title="Jira &amp; Toggl. Jak uspójnić formę raportowania?" /><published>2017-03-08T00:00:00+01:00</published><updated>2017-03-08T00:00:00+01:00</updated><id>https://rmakara.github.io/notes/Jira-Toggl-Jak-uspojnic-forme-raportowania</id><content type="html" xml:base="https://rmakara.github.io/notes/Jira-Toggl-Jak-uspojnic-forme-raportowania">&lt;h1 id=&quot;projekt-i-początkowe-założenia&quot;&gt;Projekt i początkowe założenia&lt;/h1&gt;

&lt;p&gt;Pomysł na realizowany kawałek oprogramowania wywodzi się z tego, że od ponad roku funkcjonuję jako miękka forma inteligencji (&lt;a href=&quot;https://www.youtube.com/watch?v=0XITfxBCYpc&amp;amp;t=7s&quot;&gt;Jak rozmawiać z obcymi formami inteligencji - poradnik dla craftsmanów, Slawomir Sobotka&lt;/a&gt;), a nie jako programista. W świecie zarządzania projektami (podobnie jak w programistycznym) często zachodzi zjawisko odkrywania koła na nowo lub wykorzystywania nieadekwatnych (lub zbyt wielu) narzędzi do osiągnięcia celów. Narzędzia tworzone w ramach projektu będą miały na celu automatyzację żmudnych czynności wykonywanych w pracy project managera.&lt;/p&gt;

&lt;h1 id=&quot;teoria-o-zarabianiu&quot;&gt;Teoria o zarabianiu&lt;/h1&gt;

&lt;p&gt;W ramach realizacji projektów IT funkcjonują dwie główne formy umów.&lt;/p&gt;

&lt;p&gt;Pierwszą z nich są tzw. umowy fixed price, które można zdefiniować jako “oczekuję od Ciebie dostarczenia systemu rozwiązującego problemy A, B, C w cenie X na dzień Z”. Podczas wykonywania tego typu projektów konkretny wynik powinien zostać dostarczony w ramach ustalonego budżetu. Sprawa oczywiście nie jest aż tak bardzo zafiksowana, ze względu na istnienie pojęcia &lt;a href=&quot;http://4pm.pl/artykuly/trojkat-ograniczen&quot;&gt;macierzy kompromisów projektowych bazującej na zasadach trójkąta ograniczeń&lt;/a&gt;, które definiuje negocjowalne obszary danego porozumienia. Dla uproszczenia przyjmijmy jednak zasadę “stały budżet, wiadomy efekt”.&lt;/p&gt;

&lt;p&gt;Drugą formą umowy dogadania się firmy z klientem jest Time &amp;amp; Materials, która (ponownie w uproszczeniu) zobowiązuje Klienta do ponoszenia kosztu pracy Wykonawcy według ustalonej stawki godzinowej. Przykładowo, wyznaczamy &lt;a href=&quot;https://en.wikipedia.org/wiki/Technology_roadmap&quot;&gt;road mapę&lt;/a&gt; tworzonego produktu z zaznaczeniem kamieni milowych i na zasadach partnerstwa realizujemy prace wspólnie z Klientem. Taka forma współpracy idealnie sprawdza się w momencie kooperacji ze Startupami, które nie są w stanie zdefiniować pomysłu na wydanie miliona złotych na konkretny cel ze względu na wysoką częstotliwość zmian wymagań biznesowych, szlifowanie modelu biznesowego lub szansę &lt;a href=&quot;https://en.wikipedia.org/wiki/Lean_startup#Pivot&quot;&gt;pivotowania&lt;/a&gt;. Bardzo pomocna do zrozumienia sensu tego typu rozliczania może być lektura książki &lt;a href=&quot;http://helion.pl/ksiazki/metoda-lean-startup-wykorzystaj-innowacyjne-narzedzia-i-stworz-firme-ktora-zdobedzie-rynek-eric-ries,melean.htm&quot;&gt;Metoda Lean Startup&lt;/a&gt;, jako alternatywa do założenia “w projektach IT nie da się nic przewidzieć”.&lt;/p&gt;

&lt;p&gt;Z punktu widzenia firmy realizującej dane zlecenie nieodłączną częścią pracy jest raportowanie czasu pracy członków zespołu. Ma to na celu:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Mierzenie kosztów realizacji.&lt;/li&gt;
  &lt;li&gt;Obliczanie rentowności naszych działań.&lt;/li&gt;
  &lt;li&gt;Dbanie o budżet klienta.&lt;/li&gt;
  &lt;li&gt;Umożliwienie wczesnego reagowania na ryzyka projektowe.&lt;/li&gt;
  &lt;li&gt;Generowanie zobowiązania programistów/testerów/grafików/designerów/miękkich przez kontrolę estymowanego czasu realizacji vs czasu realnego.&lt;/li&gt;
  &lt;li&gt;W przypadku rozliczeń T&amp;amp;M: fakturowania klienta za przepracowane godziny.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;problem-pierwszy&quot;&gt;Problem pierwszy&lt;/h1&gt;

&lt;p&gt;Trafiając do firmy, należy najczęściej dostosować się do przyzwyczajeń oraz narzędzi w niej wykorzystywanych. Problemem wymienionym na początku tego artykułu jest wykorzystywanie więcej, niż jednego narzędzia w celu realizowania celu, który mógłby zostać zrealizowany przez jedno narzędzie. Idealnym przykładem może być wykorzystywanie issue trackera (&lt;a href=&quot;https://www.atlassian.com/software/jira&quot;&gt;Jira&lt;/a&gt;) oraz osobnego narzędzia do raportowania przepracowanego przez specjalistów czasu (&lt;a href=&quot;http://toggl.com/&quot;&gt;Toggl&lt;/a&gt;). W ramach tego artykułu skupimy się na uspójnieniu formy raportowania spalonego czasu z realizowanymi zadaniami zdefiniowanymi w osobnym narzędziu.&lt;/p&gt;

&lt;h1 id=&quot;user-story&quot;&gt;User story&lt;/h1&gt;

&lt;p&gt;Jako project manager chcę uspójnić dane w obydwu systemach, aby w kolejnych krokach możliwe było ich łatwe połączenie. Pierwszym krokiem do realizacji tego celu będzie stworzenie mechanizmu przepisującego wszystkie utworzone w systemie Jira zadania do systemu Toggl. Ma to na celu, umożliwienie wybrania specjalistom konkretnego zadania z listy rozwijalnej podczas uzupełniania raportu. Dzięki temu unikniemy generycznych raportów znanych również z gitowych commitów: “poprawki”, “fixes” i później będziemy mogli zautomatyzować przenoszenie tych raportów do systemu Jira, który udostępnia świetne funkcjonalności do przechowywania danych oraz generowania raportów. Kroki do rozwiązania tego problemu to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Pobranie zadań konkretnego projektu z systemu Jira przez API.&lt;/li&gt;
  &lt;li&gt;Dodanie zadania do systemu Toggl lub aktualizacja istniejącego zadania w przypadku zmiany Nazwy zadania w Jira z zachowaniem identyfikatora.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;pierwsze-linijki-kodu&quot;&gt;Pierwsze linijki kodu&lt;/h1&gt;

&lt;p&gt;Wybierając język programowania na potrzeby konkursu Daj się poznać zdecydowałem się na prostotę Pythona (niestety nie było możliwe wyklikanie tego w &lt;a href=&quot;https://zapier.com/&quot;&gt;Zapierze&lt;/a&gt;, w ramach darmowej licencji :)) , która została udowodniona w primaaprilisowym filmie &lt;a href=&quot;https://www.youtube.com/watch?v=7VJaprmuHcw&quot;&gt;Gynveala Coldwinda: Gynvael’s Python 101: Hello World!&lt;/a&gt;. Początkowo przyjmie to formę prostego skryptu, a następnie przeistoczy się w bardziej sensowny soft bazujący na frameworku Django. Mimo prostoty języka, naukę zacząłem od prostego Hello Daj się poznać.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Hello Daj się poznać.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Jako project manager uznałem, że najprościej będzie wykorzystać gotowe kawałki kodu do obsłużenia API Jira oraz Toggl. W celu połączenia z Jirą wykorzystam bibliotekę &lt;a href=&quot;https://jira.readthedocs.io/en/master/&quot;&gt;jira-python&lt;/a&gt;, a do obsługi API Toggl użyję &lt;a href=&quot;https://github.com/matthewdowney/TogglPy&quot;&gt;TogglPy autorstwa matthewdowney&lt;/a&gt;. Pierwsza biblioteka została zainstalowana przy użyciu &lt;a href=&quot;https://en.wikipedia.org/wiki/Pip_(package_manager)&quot;&gt;menadżera pakietów Pip&lt;/a&gt;. Druga przez fork, czyli skopiowanie zawartości pliku &lt;a href=&quot;https://github.com/matthewdowney/TogglPy/blob/master/TogglPy.py&quot;&gt;TogglPy.py&lt;/a&gt; do swojego projektu. Czas na wykorzystanie systemu zarządzania zależnościami jeszcze nadejdzie. :)&lt;/p&gt;

&lt;p&gt;Realizacja, w formie dość proceduralnego kodu:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_issues_from_jira&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jira_password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;getpass&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;getpass&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jira_client&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;JIRA&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jira&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'domain'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;basic_auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jira&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'username'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jira_password&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;jira_issues_json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jira_client&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;search_issues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;project='{0}' ORDER BY created DESC&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jira&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'project_key'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;maxResults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maxResults&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;jira_issues&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;issue&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jira_issues_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;jira_issues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;issue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;issue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fields&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;summary&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jira_issues&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add_issues_to_toggl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jira_issues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;toggl&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;TogglPy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Toggl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;toggl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;setAPIKey&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toggl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'token'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;toggl_issues_json&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;toggl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://www.toggl.com/api/v8/projects/{0}/tasks'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toggl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'project_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]))&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;created_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;updated_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;toggl_issues&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;issue&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;toggl_issues_json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;key_last_idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;issue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;issue_key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;issue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_last_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;issue_summary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;issue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_last_idx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;toggl_issues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;issue_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;issue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;issue_summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;jira_issues_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jira_issues&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jira_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jira_summary&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jira_issues&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;items&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;'task'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

        &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'task'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'name'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jira_key&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot; &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jira_summary&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'task'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'pid'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toggl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'project_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'task'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'wid'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toggl&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'workspace_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jira_key&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;toggl_issues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jira_summary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;toggl_issues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jira_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]:&lt;/span&gt;        
                &lt;span class=&quot;n&quot;&gt;updated_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
                &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Updating [{0}/{1}] {2} {3}.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ascii'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ignore'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jira_issues_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jira_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jira_summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;toggl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;putRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://www.toggl.com/api/v8/tasks/{0}'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;toggl_issues&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jira_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;][&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;created_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Creating [{0}/{1}] {2} {3}.&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;decode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'ascii'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ignore'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jira_issues_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jira_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jira_summary&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;toggl&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;postRequest&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'https://www.toggl.com/api/v8/tasks'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Number of created Toggl tasks: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;created_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Number of updated Toggl tasks: &quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;updated_count&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ustawienia konfiguracyjne są ładowane z pliku &lt;code class=&quot;highlighter-rouge&quot;&gt;config.py&lt;/code&gt;. Została dodana możliwość uruchamiania skryptu z argumentem &lt;code class=&quot;highlighter-rouge&quot;&gt;--maxResults&lt;/code&gt; w celu uniknięcia pobierania kompletu zadań przy każdym wykonaniu kodu.&lt;/p&gt;

&lt;p&gt;Ciekawostka, na którą się natknąłem to problem z przeprocesowaniem stringu, w którym występują pewne znaki ascii, pojawiający się w momencie wykorzystania interpolacji, który nie występował podczas łączenia stringów plusikiem. Kłopot został ominięty dzięki metodzie &lt;code class=&quot;highlighter-rouge&quot;&gt;decode('ascii', 'ignore')&lt;/code&gt;.&lt;/p&gt;

&lt;h1 id=&quot;wnioski-i-cele&quot;&gt;Wnioski i cele&lt;/h1&gt;

&lt;ul&gt;
  &lt;li&gt;W bieżącym tygodniu zapoznam się ze &lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/&quot;&gt;style guidem Pythona&lt;/a&gt; w celu dostosowania się do standardów.&lt;/li&gt;
  &lt;li&gt;Wymienię &lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;Sublime&lt;/a&gt; na rzecz &lt;a href=&quot;https://www.jetbrains.com/pycharm/&quot;&gt;PyCharm&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;Szybciej, niż planowałem zacznę wykorzystywać Django.&lt;/li&gt;
  &lt;li&gt;Poczytam o wykorzystywaniu menadżera zależności w Pythonie.&lt;/li&gt;
&lt;/ul&gt;

&lt;blockquote&gt;
  &lt;p&gt;Czasem odłożenie pracy na później nie przynosi szkody. Lecz w wypadku baobabu jest to zawsze katastrofa.&lt;/p&gt;

  &lt;p&gt;– &lt;cite&gt;Antoine de Saint-Exupéry, Katya Longhi. Mały Książe.&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;h4 id=&quot;źródła-i-pojęcia&quot;&gt;Źródła i pojęcia&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;[1] &lt;a href=&quot;https://www.youtube.com/watch?v=0XITfxBCYpc&amp;amp;t=7s&quot;&gt;Jak rozmawiać z obcymi formami inteligencji - poradnik dla craftsmanów, Slawomir Sobotka&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[2] &lt;a href=&quot;http://4pm.pl/artykuly/trojkat-ograniczen&quot;&gt;Macierz kompromisów projektowych&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[3] &lt;a href=&quot;https://en.wikipedia.org/wiki/Technology_roadmap&quot;&gt;Roadmap&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[4] &lt;a href=&quot;https://en.wikipedia.org/wiki/Lean_startup#Pivot&quot;&gt;Pivot&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[5] &lt;a href=&quot;http://helion.pl/ksiazki/metoda-lean-startup-wykorzystaj-innowacyjne-narzedzia-i-stworz-firme-ktora-zdobedzie-rynek-eric-ries,melean.htm&quot;&gt;Eric Ries, Metoda Lean Startup&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[6] &lt;a href=&quot;https://www.atlassian.com/software/jira&quot;&gt;https://www.atlassian.com/software/jira&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[7] &lt;a href=&quot;http://toggl.com/&quot;&gt;http://toggl.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[8] &lt;a href=&quot;https://zapier.com/&quot;&gt;https://zapier.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[9] &lt;a href=&quot;https://www.youtube.com/watch?v=7VJaprmuHcw&quot;&gt;Gynveal Coldwind: Gynvael’s Python 101: Hello World!&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[10] &lt;a href=&quot;https://jira.readthedocs.io/en/master/&quot;&gt;jira-python&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[11] &lt;a href=&quot;https://github.com/matthewdowney/TogglPy&quot;&gt;TogglPy, matthewdowney&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[12] &lt;a href=&quot;https://en.wikipedia.org/wiki/Pip_(package_manager)&quot;&gt;Pip, Wikipedia&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[13] &lt;a href=&quot;https://www.python.org/dev/peps/pep-0008/&quot;&gt;Python Style Guide&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[14] &lt;a href=&quot;https://www.sublimetext.com/&quot;&gt;https://www.sublimetext.com/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[15] &lt;a href=&quot;https://www.jetbrains.com/pycharm/&quot;&gt;https://www.jetbrains.com/pycharm/&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;[16] Antoine de Saint-Exupéry, Katya Longhi. Mały Książe.&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Rafał Makara</name></author><category term="dsp17_kodzik" /><category term="dajsiepoznac2017" /><summary type="html">Projekt i początkowe założenia</summary></entry><entry><title type="html">Ohayō, czyli wstęp do pisania o granicy dwóch światów</title><link href="https://rmakara.github.io/notes/Ohayo-czyli-wst%C4%99p-do-pisania-o-granicy-dwoch-%C5%9Bwiatow" rel="alternate" type="text/html" title="Ohayō, czyli wstęp do pisania o granicy dwóch światów" /><published>2017-03-01T00:00:00+01:00</published><updated>2017-03-01T00:00:00+01:00</updated><id>https://rmakara.github.io/notes/Ohayo-czyli-wst%C4%99p-do-pisania-o%20granicy-dwoch-%C5%9Bwiatow</id><content type="html" xml:base="https://rmakara.github.io/notes/Ohayo-czyli-wst%C4%99p-do-pisania-o-granicy-dwoch-%C5%9Bwiatow">&lt;h1 id=&quot;daj-siępoznać-2017&quot;&gt;Daj się poznać 2017&lt;/h1&gt;

&lt;p&gt;Konkurs programistyczny &lt;a href=&quot;http://dajsiepoznac.pl&quot;&gt;Daj się poznać 2017&lt;/a&gt; organizowany przez &lt;a href=&quot;https://www.linkedin.com/in/maciejaniserowicz&quot;&gt;Macieja Aniserowicza&lt;/a&gt; był jednym z trzech głównych czynników mających wpływ na rozpoczęcie dzielenia się własną treścią w Internecie. DSP17 polega na rozwijaniu własnego projektu open source w dowolnej, wybranej przez Ciebie technologii i dzieleniu się nim ze światem. Przez 3 miesiące uczestnicy rozwijają wyżej wymieniony projekt opisując go jednym artykułem tygodniowo. Drugi artykuł nie musi dotyczyć rozwijanego kawałku oprogramowania, ale dalej powinien być nastawiony na branżę IT.&lt;/p&gt;

&lt;p&gt;Takie założenia konkursowe ułatwiają:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Poznanie interesującej nas technologii - niekoniecznie związanej z naszą codzienną pracą.&lt;/li&gt;
  &lt;li&gt;Poznanie ludzi z polskiej sceny programistycznej.&lt;/li&gt;
  &lt;li&gt;Otwarcie się na publikacje własnych treści i poddanie ich ocenie.&lt;/li&gt;
  &lt;li&gt;Wzajemną motywację uczestników konkursu.&lt;/li&gt;
  &lt;li&gt;Poprawę umiejętności i cech związanych z lingwistyką, marketingiem, programowaniem, ewaluacją, pewnością siebie, determinacją.&lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;kawałek-mojej-historii---linkedin&quot;&gt;Kawałek mojej historii - &lt;a href=&quot;https://www.linkedin.com/in/rafalmakara/&quot;&gt;LinkedIn&lt;/a&gt;&lt;/h1&gt;

&lt;p&gt;W życiu dzisiejszym zawodowo wykonuję obowiązki Project Managera. W przeszłości jednak, przez kilka lat zarabiałem na życie programowaniem, a w ramach odskoczni od codzienności pojawiały się inne przychody związane z nagrywaniem filmów, montażem, żonglerką czy założeniem 3-osobowej firmy zajmującej się międzynarodowym importem towaru (Azja!) i sprzedażą internetową.&lt;/p&gt;

&lt;p&gt;Decyzja, którą podjąłem mając 21 lat mówiła o tym, że nie wyobrażam sobie mojej osoby programującej przez 8 godzin dziennie w wieku 30 lat. Ta magiczna granica stała się deadlinem na zmianę ścieżki programistycznej na rzecz zarządzania. Stało się to jednak 4 lata szybciej.&lt;/p&gt;

&lt;h1 id=&quot;motywacja&quot;&gt;Motywacja&lt;/h1&gt;

&lt;p&gt;Pierwszym z głównych motywatorów programowania w godzinach nocnych nawet na bardzo podstawowym poziomie oraz blogowania było zderzenie z rzeczywistością pracy Project Managera oraz pożegnaniu się z odczuwaniem flow - lub jak kto woli, przepływu - stanie o którym mówi świetna prezentacja &lt;a href=&quot;https://www.ted.com/talks/mihaly_csikszentmihalyi_on_flow?language=en&quot;&gt;Flow, the secret to happiness by Mihaly Csikszentmihalyi&lt;/a&gt;. Stan ten podczas programowania daje możliwość zamknięcia się w piwnicy i zapomnienia o istnieniu pojęcia czasu przez wiele godzin. Praca Project Managera przekształca flow w spotkania, arkusze kalkulacyjne, harmonogramy, issue tracker i często w brak możliwości pokazania wyprodukowanego przez siebie klocka, na koniec produktywnego dnia.&lt;/p&gt;

&lt;p&gt;Drugim i najważniejszym motywatorem byli ludzie, którzy ramie w ramie wystartowali w konkursie. Każda z ponad 1000 zgłoszonych osób przyłożyła swoją rękę do powstania tego artykułu. Jednak osoby mające największy wpływ na mnie to te, które znam:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Andrzej Pawcenis - &lt;a href=&quot;https://inkoguto.github.io&quot;&gt;https://inkoguto.github.io&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Filip Rakowski - &lt;a href=&quot;https://github.com/dravek99/daj-sie-poznac&quot;&gt;https://github.com/dravek99/daj-sie-poznac&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Iwona Jóźwiak - &lt;a href=&quot;http://iwona.giat.pl&quot;&gt;http://iwona.giat.pl&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Łukasz Marszałek - &lt;a href=&quot;http://www.lmarszalek.pl/blog&quot;&gt;http://www.lmarszalek.pl/blog&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Łukasz Żmudziński - &lt;a href=&quot;http://zmudzinski.me&quot;&gt;http://zmudzinski.me&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Maciej Daniłowicz - &lt;a href=&quot;http://maciej-danilowicz.pl&quot;&gt;http://maciej-danilowicz.pl&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Marcin Kwiatkowski - &lt;a href=&quot;http://marcin-kwiatkowski.com&quot;&gt;http://marcin-kwiatkowski.com&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Marcin Lasak - &lt;a href=&quot;http://blog.marlas.pl&quot;&gt;http://blog.marlas.pl&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Mariusz Pisz - &lt;a href=&quot;http://mariuszpisz.pl&quot;&gt;http://mariuszpisz.pl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Za fakt zmuszenia mnie do tego należy się Wam - dziękuję! ;)&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Jeśli będziesz przychodził przykładowo o czwartej, zacznę być szczęśliwy już o trzeciej.&lt;/p&gt;

  &lt;p&gt;– &lt;cite&gt;Antoine de Saint-Exupéry, Katya Longhi. Mały Książe.&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;motyw-przewodni-czyli-granica-światów&quot;&gt;Motyw przewodni, czyli granica światów&lt;/h1&gt;

&lt;p&gt;Blog będzie opowiadał o różnicach i podobieństwach świata programistycznego i świata zarządzania projektami. Poruszy odmienne sposoby patrzenia na te same problemy oraz zobrazuje aspekty jednego świata, niedostrzegalne z powierzchni drugiego.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Dorośli nigdy nie potrafią sami zrozumieć. A dzieci bardzo męczy konieczność stałego objaśniania.&lt;/p&gt;

  &lt;p&gt;– &lt;cite&gt;Antoine de Saint-Exupéry, Katya Longhi. Mały Książe.&lt;/cite&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;projekt-programistyczny&quot;&gt;Projekt programistyczny&lt;/h1&gt;

&lt;p&gt;Równolegle do publikowanych treści powstaną podstawowe narzędzia automatyzujące żmudne czynności wykonywane w ramach pracy PMa. Początkowo przyjmie to formę opiewających w duże ilości hardcodu skryptów Pythonowych, a po wyklarowaniu wizji na projekt zacznie przeobrażać się w aplikację opartą o framework Django, która będzie możliwa do wykorzystywania przez nieprogramistów.&lt;/p&gt;

&lt;hr /&gt;
&lt;h4 id=&quot;źródła-i-pojęcia&quot;&gt;Źródła i pojęcia&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;[1] Antoine de Saint-Exupéry, Katya Longhi. Mały Książe.&lt;/li&gt;
  &lt;li&gt;[2] &lt;a href=&quot;https://www.ted.com/talks/mihaly_csikszentmihalyi_on_flow?language=en&quot;&gt;Mihaly Csikszentmihalyi. Flow, the secret to happiness&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</content><author><name>Rafał Makara</name></author><category term="dsp17_kodzik" /><category term="dajsiepoznac2017" /><summary type="html">Daj się poznać 2017</summary></entry></feed>